import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as l,o,c as p,a as n,d as a,b as e,e as t}from"./app-cf691029.js";const c={},d=n("h1",{id:"常见问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#常见问题","aria-hidden":"true"},"#"),a(" 常见问题")],-1),r={class:"hint-container tip"},u=n("p",{class:"hint-container-title"},"提示",-1),h={href:"https://github.com/vbenjs/vue-vben-admin/issues",target:"_blank",rel:"noopener noreferrer"},m=n("h2",{id:"前言",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#前言","aria-hidden":"true"},"#"),a(" 前言")],-1),v=n("p",null,"遇到问题,可以先从以下几个方面查找",-1),g={href:"https://github.com/vbenjs/vue-vben-admin/issues",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.google.com",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.xn--wxtr44c.com",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/vbenjs/vue-vben-admin/issues",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/vbenjs/vue-vben-admin/discussions",target:"_blank",rel:"noopener noreferrer"},_=t('<h2 id="关于缓存更新问题" tabindex="-1"><a class="header-anchor" href="#关于缓存更新问题" aria-hidden="true">#</a> 关于缓存更新问题</h2><p>vben-admin 的项目配置默认是缓存在 <code>localStorage</code> 内，所以版本更新后可能有些配置没改变。</p><p>解决方式是每次更新代码的时候修改 <code>package.json</code> 内的 <code>version</code> 版本号. 因为 localStorage 的 key 是根据版本号来的。所以更新后版本不同前面的配置会失效。重新登录即可</p><p><code>VUE_VBEN_ADMIN__DEVELOPMENT__2.0.3__COMMON__LOCAL__KEY__</code> key 的组成是 [项目名]+[开发环境]+[版本号]+[key]</p><h2 id="关于修改配置文件的问题" tabindex="-1"><a class="header-anchor" href="#关于修改配置文件的问题" aria-hidden="true">#</a> 关于修改配置文件的问题</h2><p>当修改 <code>.env</code> 等环境文件及 <code>vite.config.ts</code> 文件时，vite 会自动重启服务。</p><p>自动重启有几率出现问题，请重新运行项目即可解决.</p><h2 id="esbuild-模式下开启-legacy-打包失败" tabindex="-1"><a class="header-anchor" href="#esbuild-模式下开启-legacy-打包失败" aria-hidden="true">#</a> esbuild 模式下开启 LEGACY 打包失败</h2><p>如果将 \b build.minify 设置为 &#39;esbuild&#39;，且不能启用 LEGACY，否则打包将会报错，两者选其一即可打包。</p><h2 id="ant-design-vue-控制台警告" tabindex="-1"><a class="header-anchor" href="#ant-design-vue-控制台警告" aria-hidden="true">#</a> ant-design-vue 控制台警告</h2><p>在控制台看到以下警告的原因是 <code>ant-design-vue</code> 会检测是否使用了 <code>babel-plugin-import</code> 来判断是否进行了组件库的按需引入。</p>',11),y={href:"https://github.com/vbenjs/vite-plugin-style-import",target:"_blank",rel:"noopener noreferrer"},w=t(`<p>所以想关闭这个警告，得等 ant-design-vue 提供可以关闭该警告的配置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>You are using a whole package of antd, please use https://www.npmjs.com/package/babel-plugin-import to reduce app bundle size. Not support Vite <span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="添加菜单后没显示" tabindex="-1"><a class="header-anchor" href="#添加菜单后没显示" aria-hidden="true">#</a> 添加菜单后没显示</h2><p>菜单必须和路由匹配才会显示在界面上，所以得确保菜单和对应的路由存在即可显示.</p><h2 id="imagemin-依赖安装失败" tabindex="-1"><a class="header-anchor" href="#imagemin-依赖安装失败" aria-hidden="true">#</a> imagemin 依赖安装失败</h2><p>由于 imagemin 在国内安装困难，提供以下几个解决方案：</p><ol><li>使用 npm,在电脑 host 文件加上如下配置即可</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">199.232</span>.4.133 raw.githubusercontent.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="使用-pnpm-安装-imagemin-依赖安装失败" tabindex="-1"><a class="header-anchor" href="#使用-pnpm-安装-imagemin-依赖安装失败" aria-hidden="true">#</a> 使用 pnpm 安装 imagemin 依赖安装失败</h2><p>如果使用 pnpm 还是不能安装依赖，可以将图片压缩功能移除，移除方法如下：</p>`,10),j=n("code",null,"package.json",-1),q=n("code",null,"vite-plugin-imagemin",-1),E={href:"https://tinypng.com/",target:"_blank",rel:"noopener noreferrer"},N=n("li",null,[n("ol",{start:"2"},[n("li",null,[a("注释 "),n("code",null,"vite-plugin-imagemin"),a(" 插件引用")])])],-1),V=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> configImageminPlugin <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./imagemin&quot;</span><span class="token punctuation">;</span>
<span class="token constant">VITE_USE_IMAGEMIN</span> <span class="token operator">&amp;&amp;</span> vitePlugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">configImageminPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在-linux-内依赖安装失败" tabindex="-1"><a class="header-anchor" href="#在-linux-内依赖安装失败" aria-hidden="true">#</a> 在 Linux 内依赖安装失败</h2><p>如果执行 <code>pnpm install</code> 会出现以下错误：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gifsicle pre-build <span class="token builtin class-name">test</span> failed
compiling from <span class="token builtin class-name">source</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可能是 linux 服务器需要配置下环境，<code>imagemin</code> 这个会导致依赖安装失败。</p><p>这里以<code>Centos</code>为例</p><ul><li>解决方式 1:</li></ul><ol><li>将以下内容添加到 yum 源</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>nasm<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>The Netwide Assembler
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://www.nasm.us/pub/nasm/stable/linux/
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">1</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token punctuation">[</span>nasm-testing<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>The Netwide Assembler <span class="token punctuation">(</span>release candidate builds<span class="token punctuation">)</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://www.nasm.us/pub/nasm/testing/linux/
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>

<span class="token punctuation">[</span>nasm-snapshot<span class="token punctuation">]</span>
<span class="token assign-left variable">name</span><span class="token operator">=</span>The Netwide Assembler <span class="token punctuation">(</span>daily snapshot builds<span class="token punctuation">)</span>
<span class="token assign-left variable">baseurl</span><span class="token operator">=</span>http://www.nasm.us/pub/nasm/snapshots/latest/linux/
<span class="token assign-left variable">enabled</span><span class="token operator">=</span><span class="token number">0</span>
<span class="token assign-left variable">gpgcheck</span><span class="token operator">=</span><span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>/etc/yum.repos.d/</code> 下新建 <code>Centos-Nasm.repo</code>，将以上内容复制到这个文件即可</p><ol start="2"><li>执行 <code>yum install libtool automake autoconf nasm</code></li><li>重新执行 <code>pnpm install</code> 即可</li></ol><h2 id="本地运行报错" tabindex="-1"><a class="header-anchor" href="#本地运行报错" aria-hidden="true">#</a> 本地运行报错</h2><p>由于 vite 在本地没有转换代码，且代码中用到了可选链等比较新的语法。所以本地开发需要使用版本较高的浏览器(<code>Chrome 85+</code>)进行开发</p><h2 id="tab-页切换后页面空白" tabindex="-1"><a class="header-anchor" href="#tab-页切换后页面空白" aria-hidden="true">#</a> tab 页切换后页面空白</h2><p>这是由于开启了路由切换动画,且对应的页面组件存在多个根节点导致的，在页面最外层添加<code>&lt;div&gt;&lt;/div&gt;</code>即可</p><p><strong>错误示例</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 注释也算一个节点 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>text h1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>text h2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>正确示例</strong></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span>text h1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">&gt;</span></span>text h2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>如果想使用多个根标签，可以禁用路由切换动画</li><li>template 下面的根注释节点也算一个节点</li></ul></div><h2 id="组件命名问题" tabindex="-1"><a class="header-anchor" href="#组件命名问题" aria-hidden="true">#</a> 组件命名问题</h2><p>目前在 vite+vue3.0.5 版本中，如果组件命名携带关键字，则可能会导致内存溢出。例如 <code>ImportExcel</code> excel 导入组件。</p><h2 id="我的代码本地开发可以-打包就不行了" tabindex="-1"><a class="header-anchor" href="#我的代码本地开发可以-打包就不行了" aria-hidden="true">#</a> 我的代码本地开发可以，打包就不行了</h2><p>目前发现这个原因可能有以下，可以从以下原因来排查，如果还有别的可能，可以提交 pr 来告诉我</p><ol><li>使用了 ctx 这个变量，ctx 本身未暴露出在实例类型内，尤大也是说了不要用这个属性。这个属性只是用于内部使用。</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> getCurrentInstance <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token function">getCurrentInstance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ctx<span class="token punctuation">.</span>xxxx<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="safari-问题" tabindex="-1"><a class="header-anchor" href="#safari-问题" aria-hidden="true">#</a> safari 问题</h2><p>目前在 safari 上面本地开发运行样式会有问题，还未找到原因，有知道的也可以告诉我。</p><h2 id="模版区别" tabindex="-1"><a class="header-anchor" href="#模版区别" aria-hidden="true">#</a> 模版区别</h2>`,29),A={href:"https://github.com/vbenjs/vue-vben-admin",target:"_blank",rel:"noopener noreferrer"},C={href:"https://github.com/vbenjs/vben-admin-thin-next",target:"_blank",rel:"noopener noreferrer"},I=t(`<h2 id="环境问题" tabindex="-1"><a class="header-anchor" href="#环境问题" aria-hidden="true">#</a> 环境问题</h2><p>如果出现依赖安装报错，启动报错等。先检查电脑环境有没有安装齐全。</p><ul><li>Node 版本必须大于<code>12.0.0</code>不支持 <code>13</code>， 推荐 14 版本。</li><li>Git</li><li>pnpm 最新版</li></ul><h2 id="依赖安装问题" tabindex="-1"><a class="header-anchor" href="#依赖安装问题" aria-hidden="true">#</a> 依赖安装问题</h2><ul><li>如果依赖安装不了或者启动报错可以先尝试 删除 <code>pnpm.lock</code> 和 <code>node_modules</code>，然后重新运行 <code>pnpm install</code></li><li>如果依赖安装不了或者报错，可以尝试切换手机热点来进行依赖安装。</li><li>如果还是不行，可以自行配置国内镜像安装。</li><li>也可以在项目根目录创建 <code>.npmrc</code> 文件，内容如下</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># .npmrc</span>
registry <span class="token operator">=</span> https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后重新执行<code>pnpm run reinstall</code>等待安装完成即可</p><h2 id="如何保证我的代码能更新到最新代码" tabindex="-1"><a class="header-anchor" href="#如何保证我的代码能更新到最新代码" aria-hidden="true">#</a> 如何保证我的代码能更新到最新代码</h2><p>如果你使用了该项目进行项目开发。开发之中想同步最新的代码。你可以设置多个源的方式</p><ol><li>克隆代码</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/vbenjs/vben-admin-thin-next.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>添加自己的公司 git 源地址</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># up 为源名称,可以随意设置</span>
<span class="token comment"># gitUrl为开源最新代码</span>
<span class="token function">git</span> remote <span class="token function">add</span> up gitUrl<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>提交代码到自己公司 git</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 提交代码到自己公司</span>
<span class="token comment"># main为分支名 需要自行根据情况修改</span>
<span class="token function">git</span> push up main

<span class="token comment"># 同步公司的代码</span>
<span class="token comment"># main为分支名 需要自行根据情况修改</span>
<span class="token function">git</span> pull up main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>如何同步开源最新代码</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> pull origin main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>同步代码的时候会出现冲突。只需要把冲突解决即可</p></div><h2 id="打包文件过大" tabindex="-1"><a class="header-anchor" href="#打包文件过大" aria-hidden="true">#</a> 打包文件过大</h2><ul><li><p>首先，完整版由于引用了比较多的库文件，所以打包会比较大。可以使用精简版来进行开发</p></li><li><p>其次建议开启 gzip，使用之后体积会只有原先 1/3 左右。</p></li></ul><p>gzip 可以由服务器直接开启。如果是这样，前端不需要构建 <code>.gz</code> 格式的文件</p><p>如果前端构建了 <code>.gz</code> 文件，以 nginx 为例，nginx 需要开启 <code>gzip_static: on</code> 这个选项。</p><ul><li>开启 gzip 的同时还可以同时开启 <code>brotli</code>，比 gzip 更好的压缩。两者可以共存</li></ul><p><strong>注意</strong></p><ul><li><p>gzip_static: 这个模块需要 nginx 另外安装，默认的 nginx 没有安装这个模块。</p></li><li><p>开启 <code>brotli</code> 也需要 nginx 另外安装模块</p></li></ul><h2 id="运行错误" tabindex="-1"><a class="header-anchor" href="#运行错误" aria-hidden="true">#</a> 运行错误</h2><p>如果出现类似以下错误，请检查项目全路径（包含所有父级路径）不能出现中文、日文、韩文。否则将会出现路径访问 404 导致以下问题</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">[</span>vite<span class="token punctuation">]</span> Failed to resolve <span class="token keyword">module</span> <span class="token keyword">import</span> <span class="token string">&quot;ant-design-vue/dist/antd.css-vben-adminode_modulesant-design-vuedistantd.css&quot;</span><span class="token punctuation">.</span> <span class="token punctuation">(</span>imported by <span class="token operator">/</span>@<span class="token operator">/</span>setup<span class="token operator">/</span>ant<span class="token operator">-</span>design<span class="token operator">-</span>vue<span class="token operator">/</span>index<span class="token punctuation">.</span>ts<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="为什么是-moment-js" tabindex="-1"><a class="header-anchor" href="#为什么是-moment-js" aria-hidden="true">#</a> 为什么是 moment.js</h2>`,29),z=n("code",null,"dayjs",-1),L={href:"https://2x.antdv.com/docs/vue/introduce-cn/",target:"_blank",rel:"noopener noreferrer"},T=t(`<p>目前还没有基于 Vite 的 dayjs 替换 momentjs 方案，webpack 已经有了。等以后出现了在进行替换。</p><h2 id="控制台路由警告问题" tabindex="-1"><a class="header-anchor" href="#控制台路由警告问题" aria-hidden="true">#</a> 控制台路由警告问题</h2><p>如果看到控制台有如下警告，且页面<strong>能正常打开</strong> 可以忽略该警告。</p><p>后续 <code>vue-router</code> 可能会提供配置项来关闭警告</p><p><strong>2.6.1 及以上版本已移除此警告</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">[</span>Vue Router warn<span class="token punctuation">]</span><span class="token operator">:</span> No match found <span class="token keyword">for</span> location <span class="token keyword">with</span> path <span class="token string">&quot;xxxx&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="启动报错" tabindex="-1"><a class="header-anchor" href="#启动报错" aria-hidden="true">#</a> 启动报错</h2><p>当出现以下错误信息时，请检查你的 nodejs 版本号是否符合要求</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>TypeError: str.matchAll is not a <span class="token keyword">function</span>
at Object.extractor <span class="token punctuation">(</span>vue-vben-admin-main<span class="token punctuation">\\</span>node_modules@purge-icons<span class="token punctuation">\\</span>core<span class="token punctuation">\\</span>dist<span class="token punctuation">\\</span>index.js:146:27<span class="token punctuation">)</span>
at Extract <span class="token punctuation">(</span>vue-vben-admin-main<span class="token punctuation">\\</span>node_modules@purge-icons<span class="token punctuation">\\</span>core<span class="token punctuation">\\</span>dist<span class="token punctuation">\\</span>index.js:173:54<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="页面报错" tabindex="-1"><a class="header-anchor" href="#页面报错" aria-hidden="true">#</a> 页面报错</h2><p>当页面出现以下报错，是因为 /xxx 对应的路由组件内部出现了错误。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code> <span class="token function">Uncaught</span> <span class="token punctuation">(</span><span class="token keyword">in</span> promise<span class="token punctuation">)</span> Error<span class="token operator">:</span> Couldn&#39;t resolve component <span class="token string">&quot;default&quot;</span> at <span class="token string">&quot;/xxx&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以尝试从以下几点排查</p><ol><li>检查对应组件内部 import 的所有文件是否正确</li><li>检查引入方式是否错误。</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 正确的</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> cloneDeep <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;lodash-es&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// 报错</span>
<span class="token keyword">import</span> _ <span class="token keyword">from</span> <span class="token string">&quot;lodash-es&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>检查样式是否使用变量及有没有引入对应的变量文件</li><li>检查代码明显的语法错误</li></ol><p>这样就不会是使用的取值忘记 xxx.value 来进行数据获取</p><h2 id="跨域问题" tabindex="-1"><a class="header-anchor" href="#跨域问题" aria-hidden="true">#</a> 跨域问题</h2><p>参考<a href="../dep/cors">跨域问题</a></p><h2 id="接口请求问题" tabindex="-1"><a class="header-anchor" href="#接口请求问题" aria-hidden="true">#</a> 接口请求问题</h2><p>proxy 代理不成功，没有代理到实际地址？</p><p>代理只是服务请求代理，这个地址是不会变的。 原理可以简单的理解为，在本地启了一个服务，你先请求了本地的服务，本地的服务转发了你的请求到实际服务器。所以你在浏览器上看到的请求地址还是 <code>http://localhost:8000/xxx</code>。以服务端是否收到请求为准。</p><h2 id="组件库问题" tabindex="-1"><a class="header-anchor" href="#组件库问题" aria-hidden="true">#</a> 组件库问题</h2>`,23),M={href:"https://2x.antdv.com/docs/vue/faq-cn/",target:"_blank",rel:"noopener noreferrer"};function D(G,O){const s=l("ExternalLinkIcon");return o(),p("div",null,[d,n("div",r,[u,n("p",null,[a("列举了一些常见的问题。有问题可以先来这里寻找，如果没有可以在 "),n("a",h,[a("issue"),e(s)]),a(" 提。")])]),m,v,n("ol",null,[n("li",null,[a("对应模块的 GitHub 仓库 "),n("a",g,[a("issue"),e(s)]),a(" 搜索")]),n("li",null,[a("从"),n("a",b,[a("google"),e(s)]),a("搜索问题")]),n("li",null,[a("从"),n("a",k,[a("百度"),e(s)]),a("搜索问题")]),n("li",null,[a("在下面列表找不到问题可以到 issue 提问 "),n("a",f,[a("issues"),e(s)])]),n("li",null,[a("如果不是问题类型的，需要讨论的，请到 "),n("a",x,[a("discussions"),e(s)]),a(" 讨论")])]),_,n("p",null,[a("但是项目使用的是 vite 的插件 "),n("a",y,[a("vite-plugin-style-import"),e(s)]),a(" 来进行按需引入。在 vite 内没必要使用 babel 在转换一次代码了。")]),w,n("ul",null,[n("li",null,[a("在 "),j,a(" 内删除 "),q,a(" 这个依赖。这会导致图片没有压缩，但是可以手动到在线网站进行压缩。这里推荐"),n("a",E,[a("tinypng"),e(s)])]),N]),V,n("ul",null,[n("li",null,[n("a",A,[a("Vue-Vben-Admin"),e(s)]),a(" - 是包含 Demo 示例的,个人建议不要在这上面进行开发。当然，你如果动手能力强的话可以直接改。")]),n("li",null,[n("a",C,[a("Vue-Vben-Admin-Thin-Next"),e(s)]),a(" 精简了代码后的模版项目。适合在这基础上进行二次开发。")])]),I,n("p",null,[a("很多人问为什么不用"),z,a("。在项目依赖中可以看到，它是 "),n("a",L,[a("Ant-Design-Vue"),e(s)]),a(" 内部自带的。")]),T,n("p",null,[a("跟组件库相关的问题可以查看"),n("a",M,[a("常见问题"),e(s)])])])}const P=i(c,[["render",D],["__file","faq.html.vue"]]);export{P as default};
