import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,o as a,d as t}from"./app-5jlYXHXB.js";const n={},e=t(`<h1 id="常见疑点说明" tabindex="-1"><a class="header-anchor" href="#常见疑点说明"><span>常见疑点说明</span></a></h1><p>该分类主要说明一些地方为什么这样做，以及原因是什么</p><h2 id="项目别名" tabindex="-1"><a class="header-anchor" href="#项目别名"><span>项目别名</span></a></h2><p><code>/@/</code> 是 <code>vite</code> 内配置的别名</p><p><code>/@/settings</code> 等同于 <code>src/settings</code></p><div class="hint-container tip"><p class="hint-container-title">为什么是/@/</p><p>因为项目是从 <code>vite1.0</code> 过渡过来的，<code>vite1.0</code> 只能以 <code>/</code> 开头，所以有一部分从 <code>webpack</code> 用户转过来的可能不习惯。</p></div><h2 id="为什么在本地没有按需引入组件库样式-在生产才引入" tabindex="-1"><a class="header-anchor" href="#为什么在本地没有按需引入组件库样式-在生产才引入"><span>为什么在本地没有按需引入组件库样式，在生产才引入</span></a></h2><p>在 main.ts 内可以看到，本地开发会全量引入 antd.less，vite-plugin-style-import 在本地是没有作用的。</p><p>这样做的原因主要是加快本地开发刷新速度。如果在本地开发中也按需按需引入，则在浏览器控制台内可以看到，平均一个页面大概增加了 100 次 http 请求。如果全量引入，只增加了一个请求，所以为了减少请求数量，才这样种。</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// src/main.ts</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E5C07B;">env</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75;">DEV</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#61AFEF;">  import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;ant-design-vue/dist/antd.less&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">// build/vite/plugin/styleImport</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> styleImport</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;vite-plugin-style-import&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> configStyleImportPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">isBuild</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> boolean</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">isBuild</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">return</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  const</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> styleImportPlugin</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> styleImport</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">    libs</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        libraryName</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">&quot;ant-design-vue&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">        esModule</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">        resolveStyle</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: (</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">          return</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> \`ant-design-vue/es/</span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/style/index\`</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">      },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    ],</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  });</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> styleImportPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="为什么单独把-moment-放到-datautil-内" tabindex="-1"><a class="header-anchor" href="#为什么单独把-moment-放到-datautil-内"><span>为什么单独把 moment 放到 dataUtil 内</span></a></h2><p>在 <code>src/utils/dataUtil</code> 内，使用的是 moment，其次在页面中对时间的操作也是使用 dateUtil，而不是直接 <code>import moment from &#39;moment&#39;</code>。</p><p>这样做主要是方便后续切换到 <code>dayjs</code>，因为 api 一样，所以在后续切换中，只需更改 dataUtil 内的 import 即可，而不用全部更改。</p>`,13),l=[e];function h(p,d){return a(),s("div",null,l)}const o=i(n,[["render",h],["__file","doubt.html.vue"]]),c=JSON.parse('{"path":"/zh/guide/tutorial/Other/doubt.html","title":"常见疑点","lang":"zh-CN","frontmatter":{"title":"常见疑点","author":"Ryan SU","description":"常见疑点说明 该分类主要说明一些地方为什么这样做，以及原因是什么 项目别名 /@/ 是 vite 内配置的别名 /@/settings 等同于 src/settings 为什么是/@/ 因为项目是从 vite1.0 过渡过来的，vite1.0 只能以 / 开头，所以有一部分从 webpack 用户转过来的可能不习惯。 为什么在本地没有按需引入组件库样式...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vben.ryansu.tech/guide/tutorial/Other/doubt.html"}],["meta",{"property":"og:url","content":"https://vben.ryansu.tech/zh/guide/tutorial/Other/doubt.html"}],["meta",{"property":"og:site_name","content":"Simple Admin Vben UI"}],["meta",{"property":"og:title","content":"常见疑点"}],["meta",{"property":"og:description","content":"常见疑点说明 该分类主要说明一些地方为什么这样做，以及原因是什么 项目别名 /@/ 是 vite 内配置的别名 /@/settings 等同于 src/settings 为什么是/@/ 因为项目是从 vite1.0 过渡过来的，vite1.0 只能以 / 开头，所以有一部分从 webpack 用户转过来的可能不习惯。 为什么在本地没有按需引入组件库样式..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-09T00:16:17.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2023-05-09T00:16:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"常见疑点\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-09T00:16:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\"}]}"]]},"headers":[{"level":2,"title":"项目别名","slug":"项目别名","link":"#项目别名","children":[]},{"level":2,"title":"为什么在本地没有按需引入组件库样式，在生产才引入","slug":"为什么在本地没有按需引入组件库样式-在生产才引入","link":"#为什么在本地没有按需引入组件库样式-在生产才引入","children":[]},{"level":2,"title":"为什么单独把 moment 放到 dataUtil 内","slug":"为什么单独把-moment-放到-datautil-内","link":"#为什么单独把-moment-放到-datautil-内","children":[]}],"git":{"createdTime":1683559583000,"updatedTime":1683591377000,"contributors":[{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":1.26,"words":379},"filePathRelative":"zh/guide/tutorial/Other/doubt.md","localizedDate":"2023年5月8日","autoDesc":true,"excerpt":"\\n<p>该分类主要说明一些地方为什么这样做，以及原因是什么</p>\\n<h2>项目别名</h2>\\n<p><code>/@/</code> 是 <code>vite</code> 内配置的别名</p>\\n<p><code>/@/settings</code> 等同于 <code>src/settings</code></p>\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">为什么是/@/</p>\\n<p>因为项目是从 <code>vite1.0</code> 过渡过来的，<code>vite1.0</code> 只能以 <code>/</code> 开头，所以有一部分从 <code>webpack</code> 用户转过来的可能不习惯。</p>\\n</div>"}');export{o as comp,c as data};
