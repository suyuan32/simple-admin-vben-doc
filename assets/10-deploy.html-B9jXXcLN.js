import{_ as i}from"./report-CtXAl13D.js";import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o as n,d as e}from"./app-5jlYXHXB.js";const l={},t=e(`<h1 id="构建-部署" tabindex="-1"><a class="header-anchor" href="#构建-部署"><span>构建&amp;部署</span></a></h1><div class="hint-container tip"><p class="hint-container-title">前言</p><p>由于是展示项目，所以打包后相对较大，如果项目中没有用到的插件，可以删除对应的文件或者路由，不引用即可，没有引用就不会打包。</p><p>当然，你也可以使用精简版 <a href="https://github.com/vbenjs/vben-admin-thin-next" target="_blank" rel="noopener noreferrer">vue-vben-admin-thin</a> 进行开发。</p></div><h2 id="构建" tabindex="-1"><a class="header-anchor" href="#构建"><span>构建</span></a></h2><p>项目开发完成之后，执行以下命令进行构建</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>构建打包成功之后，会在根目录生成 dist 文件夹，里面就是构建打包好的文件</p><h3 id="旧版浏览器兼容" tabindex="-1"><a class="header-anchor" href="#旧版浏览器兼容"><span>旧版浏览器兼容</span></a></h3><p>在 <strong>.env.production</strong> 内</p><p>设置 <code>VITE_LEGACY=true</code> 即可打包出兼容旧版浏览器的代码</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">VITE_LEGACY</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="预览" tabindex="-1"><a class="header-anchor" href="#预览"><span>预览</span></a></h3><p>发布之前可以在本地进行预览，有多种方式，这里介绍两种</p><p><strong>不能直接打开构建后的 html 文件</strong></p><ul><li>使用项目自定的命令进行预览(推荐)</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 先打包在进行预览</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> preview</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 直接预览本地 dist 文件目录</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> preview:dist</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>本地服务器预览(通过 live-server)</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 1.全局安装live-server</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> global</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> live-server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 2. 进入打包的后目录</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> ./dist</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 本地预览，默认端口8080</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">live-server</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 指定端口</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">live-server</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> --port</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 9000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="分析构建文件体积" tabindex="-1"><a class="header-anchor" href="#分析构建文件体积"><span>分析构建文件体积</span></a></h3><p>如果你的构建文件很大，可以通过项目内置 <a href="https://github.com/doesdev/rollup-plugin-analyzer" target="_blank" rel="noopener noreferrer">rollup-plugin-analyzer</a> 插件进行代码体积分析，从而优化你的代码。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> report</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>运行之后，在自动打开的页面可以看到具体的体积分布，以分析哪些依赖有问题。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>左上角可以切换 显示 gzip 或者 brotli</p></div><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="压缩" tabindex="-1"><a class="header-anchor" href="#压缩"><span>压缩</span></a></h2><h3 id="开启-gzip-压缩" tabindex="-1"><a class="header-anchor" href="#开启-gzip-压缩"><span>开启 gzip 压缩</span></a></h3><p>开启 gzip，并配合 nginx 的 <code>gzip_static</code> 功能可以大大加快页面访问速度</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>只需开启 <code>VITE_BUILD_COMPRESS=&#39;gzip&#39;</code> 即可在打包的同时生成 .gz 文件</p></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 根据自己路径来配置更改</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 例如部署在nginx /next/路径下  则VITE_PUBLIC_PATH=/next/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">VITE_PUBLIC_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="开启-brotli-压缩" tabindex="-1"><a class="header-anchor" href="#开启-brotli-压缩"><span>开启 brotli 压缩</span></a></h3><p>brotli 是比 gzip 压缩率更高的算法，可以与 gzip 共存不会冲突，需要 nginx 安装指定模块并开启即可。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>只需开启 <code>VITE_BUILD_COMPRESS=&#39;brotli&#39;</code> 即可在打包的同时生成 .br 文件</p></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 根据自己路径来配置更改</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 例如部署在nginx /next/路径下  则VITE_PUBLIC_PATH=/next/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">VITE_PUBLIC_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="同时开启-gzip-与-brotli" tabindex="-1"><a class="header-anchor" href="#同时开启-gzip-与-brotli"><span>同时开启 gzip 与 brotli</span></a></h3><p>只需开启 <code>VITE_BUILD_COMPRESS=&#39;brotli,gzip&#39;</code> 即可在打包的同时生成 <code>.gz</code> 和 <code>.br</code> 文件。</p><h3 id="gzip-与-brotli-在-nginx-内的配置" tabindex="-1"><a class="header-anchor" href="#gzip-与-brotli-在-nginx-内的配置"><span>gzip 与 brotli 在 nginx 内的配置</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">http</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 开启gzip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 开启gzip_static</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # gzip_static 开启后可能会报错，需要安装相应的模块, 具体安装方式可以自行查询</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 只有这个开启，vue文件打包的.gz文件才会有效果，否则不需要开启gzip进行打包</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_static</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_proxied</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> any</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_min_length</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 1k</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_buffers</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 16k</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  #如果nginx中使用了多层代理 必须设置这个才可以开启gzip。</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_http_version</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_comp_level</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_types</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> text/plain</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/javascript</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/x-javascript</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> text/css</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/xml</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> text/javascript</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/x-httpd-php</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> image/jpeg</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> image/gif</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> image/png</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_vary</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> off</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  gzip_disable</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;MSIE [1-6]\\.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 开启 brotli压缩</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 需要安装对应的nginx模块,具体安装方式可以自行查询</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 可以与gzip共存不会冲突</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  brotli</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  brotli_comp_level</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  brotli_buffers</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 16</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> 8k</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  brotli_min_length</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 20</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  brotli_types</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> text/plain</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> text/css</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/json</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/x-javascript</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> text/xml</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/xml</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/xml+rss</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> text/javascript</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> application/javascript</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> image/svg+xml</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h2><div class="hint-container caution"><p class="hint-container-title">注意</p><p>项目默认是在生产环境开启 Mock，这样做非常不好，只是为了演示环境有数据，不建议在生产环境使用 Mock，而应该使用真实的后台接口，并将 Mock 关闭。</p></div><h3 id="发布" tabindex="-1"><a class="header-anchor" href="#发布"><span>发布</span></a></h3><p>简单的部署只需要将最终生成的静态文件，dist 文件夹的静态文件发布到你的 cdn 或者静态服务器即可，需要注意的是其中的 index.html 通常会是你后台服务的入口页面，在确定了 js 和 css 的静态之后可能需要改变页面的引入路径。</p><p>例如上传到 nginx</p><p><code>/srv/www/project/index.html</code></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># nginx配置</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">location</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 不缓存html，防止程序更新后缓存继续生效</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">$request_filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;"> ~*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> .</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">\\.</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:htm</span><span style="--shiki-light:#D73A49;--shiki-dark:#ABB2BF;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">$</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Cache-Control</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;private, no-store, no-cache, must-revalidate, proxy-revalidate&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    access_log</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 这里是vue打包文件dist内的文件的存放路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  root</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   /srv/www/project/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  index</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  index.html</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>部署时可能会发现资源路径不对，只需要修改<code>.env.production</code>文件即可。</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 根据自己路径来配置更改</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 注意需要以 / 开头和结尾</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">VITE_PUBLIC_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">VITE_PUBLIC_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/xxx/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="前端路由与服务端的结合" tabindex="-1"><a class="header-anchor" href="#前端路由与服务端的结合"><span>前端路由与服务端的结合</span></a></h3><p>项目前端路由使用的是 vue-router，所以你可以选择两种方式：history 和 hash。</p><ul><li><strong>hash</strong> 默认会在 url 后面拼接<code>#</code></li><li><strong>history</strong> 则不会，不过 <code>history</code> 需要服务器配合</li></ul><p>可在 <a href="https://github.com/vbenjs/vue-vben-admin/tree/main/src/router/index.ts" target="_blank" rel="noopener noreferrer">src/router/index.ts</a> 内进行 mode 修改</p><div class="language-ts line-numbers-mode" data-highlighter="shiki" data-ext="ts" data-title="ts" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  createRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  createWebHashHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  createWebHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> &quot;vue-router&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">createRouter</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  history</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">createWebHashHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  // or</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">  history</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">createWebHistory</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">});</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="history-路由模式下服务端配置" tabindex="-1"><a class="header-anchor" href="#history-路由模式下服务端配置"><span>history 路由模式下服务端配置</span></a></h3><p>开启 history 模式需要服务器配置，更多的服务器配置详情可以看 <a href="https://next.router.vuejs.org/guide/essentials/history-mode.html#html5-mode" target="_blank" rel="noopener noreferrer">history-mode</a></p><p>这里以 nginx 配置为例</p><p><strong>部署到根目录</strong></p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  location</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    # 用于配合 History 使用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    try_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $uri</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /index.html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>部署到非根目录</strong></p><ol><li>首先需要在打包的时候更改配置</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 在.env.production内，配置子目录路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">VITE_PUBLIC_PATH</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /sub/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       80</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  localhost</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    location</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /sub/</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">      # 这里是vue打包文件dist内的文件的存放路径</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">      alias</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">   /srv/www/project/</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">      index</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> index.html</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> index.htm</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">      try_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $uri</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $uri</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /sub/index.html</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-nginx-处理跨域" tabindex="-1"><a class="header-anchor" href="#使用-nginx-处理跨域"><span>使用 nginx 处理跨域</span></a></h3><p>使用 nginx 处理项目部署后的跨域问题</p><ol><li>配置前端项目接口地址</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;"># 在.env.production内，配置接口地址</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;">VITE_GLOB_API_URL</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">/api</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>在 nginx 配置请求转发到后台</li></ol><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">server</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">       8080</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;">  localhost</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">  # 接口代理，用于解决跨域问题</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">  location</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> /api</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Host</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $host</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> X-Real-IP</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $remote_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> X-Forwarded-For</span><span style="--shiki-light:#24292E;--shiki-dark:#E06C75;"> $proxy_add_x_forwarded_for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    # 后台接口地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> http://110.110.1.1:8080/api</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    proxy_redirect</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Access-Control-Allow-Origin</span><span style="--shiki-light:#005CC5;--shiki-dark:#E5C07B;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Access-Control-Allow-Headers</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> X-Requested-With</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;">    add_header</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> Access-Control-Allow-Methods</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379;"> GET,POST,OPTIONS</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65),h=[t];function p(k,r){return n(),a("div",null,h)}const o=s(l,[["render",p],["__file","10-deploy.html.vue"]]),y=JSON.parse('{"path":"/zh/guide/tutorial/Basic/10-deploy.html","title":"构建部署","lang":"zh-CN","frontmatter":{"title":"构建部署","order":10,"author":"Ryan SU","description":"构建&部署 前言 由于是展示项目，所以打包后相对较大，如果项目中没有用到的插件，可以删除对应的文件或者路由，不引用即可，没有引用就不会打包。 当然，你也可以使用精简版 vue-vben-admin-thin 进行开发。 构建 项目开发完成之后，执行以下命令进行构建 构建打包成功之后，会在根目录生成 dist 文件夹，里面就是构建打包好的文件 旧版浏览器...","head":[["link",{"rel":"alternate","hreflang":"en-us","href":"https://vben.ryansu.tech/guide/tutorial/Basic/10-deploy.html"}],["meta",{"property":"og:url","content":"https://vben.ryansu.tech/zh/guide/tutorial/Basic/10-deploy.html"}],["meta",{"property":"og:site_name","content":"Simple Admin Vben UI"}],["meta",{"property":"og:title","content":"构建部署"}],["meta",{"property":"og:description","content":"构建&部署 前言 由于是展示项目，所以打包后相对较大，如果项目中没有用到的插件，可以删除对应的文件或者路由，不引用即可，没有引用就不会打包。 当然，你也可以使用精简版 vue-vben-admin-thin 进行开发。 构建 项目开发完成之后，执行以下命令进行构建 构建打包成功之后，会在根目录生成 dist 文件夹，里面就是构建打包好的文件 旧版浏览器..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vben.ryansu.tech/images/report.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2023-05-09T00:16:17.000Z"}],["meta",{"property":"article:author","content":"Ryan SU"}],["meta",{"property":"article:modified_time","content":"2023-05-09T00:16:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"构建部署\\",\\"image\\":[\\"https://vben.ryansu.tech/images/report.png\\"],\\"dateModified\\":\\"2023-05-09T00:16:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Ryan SU\\"}]}"]]},"headers":[{"level":2,"title":"构建","slug":"构建","link":"#构建","children":[{"level":3,"title":"旧版浏览器兼容","slug":"旧版浏览器兼容","link":"#旧版浏览器兼容","children":[]},{"level":3,"title":"预览","slug":"预览","link":"#预览","children":[]},{"level":3,"title":"分析构建文件体积","slug":"分析构建文件体积","link":"#分析构建文件体积","children":[]}]},{"level":2,"title":"压缩","slug":"压缩","link":"#压缩","children":[{"level":3,"title":"开启 gzip 压缩","slug":"开启-gzip-压缩","link":"#开启-gzip-压缩","children":[]},{"level":3,"title":"开启 brotli 压缩","slug":"开启-brotli-压缩","link":"#开启-brotli-压缩","children":[]},{"level":3,"title":"同时开启 gzip 与 brotli","slug":"同时开启-gzip-与-brotli","link":"#同时开启-gzip-与-brotli","children":[]},{"level":3,"title":"gzip 与 brotli 在 nginx 内的配置","slug":"gzip-与-brotli-在-nginx-内的配置","link":"#gzip-与-brotli-在-nginx-内的配置","children":[]}]},{"level":2,"title":"部署","slug":"部署","link":"#部署","children":[{"level":3,"title":"发布","slug":"发布","link":"#发布","children":[]},{"level":3,"title":"前端路由与服务端的结合","slug":"前端路由与服务端的结合","link":"#前端路由与服务端的结合","children":[]},{"level":3,"title":"history 路由模式下服务端配置","slug":"history-路由模式下服务端配置","link":"#history-路由模式下服务端配置","children":[]},{"level":3,"title":"使用 nginx 处理跨域","slug":"使用-nginx-处理跨域","link":"#使用-nginx-处理跨域","children":[]}]}],"git":{"createdTime":1683559583000,"updatedTime":1683591377000,"contributors":[{"name":"Ryan SU","email":"yuansu.china.work@gmail.com","commits":1}]},"readingTime":{"minutes":4.82,"words":1446},"filePathRelative":"zh/guide/tutorial/Basic/10-deploy.md","localizedDate":"2023年5月8日","autoDesc":true,"excerpt":"\\n<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">前言</p>\\n<p>由于是展示项目，所以打包后相对较大，如果项目中没有用到的插件，可以删除对应的文件或者路由，不引用即可，没有引用就不会打包。</p>\\n<p>当然，你也可以使用精简版 <a href=\\"https://github.com/vbenjs/vben-admin-thin-next\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">vue-vben-admin-thin</a> 进行开发。</p>\\n</div>\\n<h2>构建</h2>"}');export{o as comp,y as data};
