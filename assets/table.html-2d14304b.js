import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as i,a as n,d as s,b as a,w as d,e as t}from"./app-908acf4f.js";const u={},r=t(`<h1 id="table-表格" tabindex="-1"><a class="header-anchor" href="#table-表格" aria-hidden="true">#</a> Table 表格</h1><p>对 <code>antv</code> 的 table 组件进行封装</p><blockquote><p>如果文档内没有，可以尝试在在线示例内寻找</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>基础示例<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">titleHelpMessage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>温馨提醒<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:canResize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:striped</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:bordered</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ pageSize: 20 }<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#toolbar</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 操作按钮 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BasicTable</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicColumn<span class="token punctuation">,</span> BasicTable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Table&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
          <span class="token literal-property property">align</span><span class="token operator">:</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span> <span class="token keyword">as</span> BasicColumn<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="template-示例" tabindex="-1"><a class="header-anchor" href="#template-示例" aria-hidden="true">#</a> template 示例</h3><p>所有可调用函数见下方 <code>Methods</code> 说明</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span>
      <span class="token attr-name">:canResize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RefTable示例<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">titleHelpMessage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>使用Ref调用表格内方法<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableRef<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:api</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>api<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:rowSelection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ type: &#39;checkbox&#39; }<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> unref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicTable<span class="token punctuation">,</span> TableActionType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Table&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getBasicColumns<span class="token punctuation">,</span> getBasicShortColumns <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./tableData&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> demoListApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/api/demo/table&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> tableRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>Nullable<span class="token operator">&lt;</span>TableActionType<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">getTableAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tableAction <span class="token operator">=</span> <span class="token function">unref</span><span class="token punctuation">(</span>tableRef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tableAction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;tableAction is null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> tableAction<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">changeLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getTableAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">getTableAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      tableRef<span class="token punctuation">,</span>
      <span class="token literal-property property">api</span><span class="token operator">:</span> demoListApi<span class="token punctuation">,</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getBasicColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      changeLoading<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basiccolumn-和-tableaction-通过权限和业务控制显示隐藏的示例" tabindex="-1"><a class="header-anchor" href="#basiccolumn-和-tableaction-通过权限和业务控制显示隐藏的示例" aria-hidden="true">#</a> BasicColumn 和 tableAction 通过权限和业务控制显示隐藏的示例</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>registerTable<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ record }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableAction</span>
          <span class="token attr-name">:actions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[
            {
              label: &#39;编辑&#39;,
              onClick: handleEdit.bind(null, record),
              auth: &#39;other&#39;, // 根据权限控制是否显示: 无权限，不显示
            },
            {
              label: &#39;删除&#39;,
              icon: &#39;ic:outline-delete-outline&#39;,
              onClick: handleDelete.bind(null, record),
              auth: &#39;super&#39;, // 根据权限控制是否显示: 有权限，会显示
            },
          ]<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:dropDownActions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[
            {
              label: &#39;启用&#39;,
              popConfirm: {
                title: &#39;是否启用？&#39;,
                confirm: handleOpen.bind(null, record),
              },
              ifShow: (_action) =&gt; {
                return record.status !== &#39;enable&#39;; // 根据业务控制是否显示: 非enable状态的不显示启用按钮
              },
            },
            {
              label: &#39;禁用&#39;,
              popConfirm: {
                title: &#39;是否禁用？&#39;,
                confirm: handleOpen.bind(null, record),
              },
              ifShow: () =&gt; {
                return record.status === &#39;enable&#39;; // 根据业务控制是否显示: enable状态的显示禁用按钮
              },
            },
            {
              label: &#39;同时控制&#39;,
              popConfirm: {
                title: &#39;是否动态显示？&#39;,
                confirm: handleOpen.bind(null, record),
              },
              auth: &#39;super&#39;, // 同时根据权限和业务控制是否显示
              ifShow: () =&gt; {
                return true; // 根据业务控制是否显示
              },
            },
          ]<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BasicTable</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  BasicTable<span class="token punctuation">,</span>
  useTable<span class="token punctuation">,</span>
  BasicColumn<span class="token punctuation">,</span>
  TableAction<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Table&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> demoListApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/api/demo/table&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">columns</span><span class="token operator">:</span> BasicColumn<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 根据权限控制是否显示: 无权限，不显示</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;地址&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token string">&quot;super&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 同时根据权限控制是否显示</span>
    <span class="token function-variable function">ifShow</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_column</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 根据业务控制是否显示</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable<span class="token punctuation">,</span> TableAction <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>registerTable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;TableAction组件及固定列示例&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">api</span><span class="token operator">:</span> demoListApi<span class="token punctuation">,</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> columns<span class="token punctuation">,</span>
      <span class="token literal-property property">bordered</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">actionColumn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Action&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">customRender</span><span class="token operator">:</span> <span class="token string">&quot;action&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">handleEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">record</span><span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了编辑&quot;</span><span class="token punctuation">,</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">handleDelete</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">record</span><span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了删除&quot;</span><span class="token punctuation">,</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">handleOpen</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">record</span><span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了启用&quot;</span><span class="token punctuation">,</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      registerTable<span class="token punctuation">,</span>
      handleEdit<span class="token punctuation">,</span>
      handleDelete<span class="token punctuation">,</span>
      handleOpen<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usetable" tabindex="-1"><a class="header-anchor" href="#usetable" aria-hidden="true">#</a> useTable</h2><p>使用组件自带的 <strong>useTable</strong> 可以方便使用表单</p><p>下面是一个使用简单表格的示例，</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>registerTable<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicTable<span class="token punctuation">,</span> useTable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/components/Table&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getBasicColumns<span class="token punctuation">,</span> getBasicShortColumns <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./tableData&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> demoListApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/api/demo/table&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>
      registerTable<span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        setLoading<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">api</span><span class="token operator">:</span> demoListApi<span class="token punctuation">,</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getBasicColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">changeLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      registerTable<span class="token punctuation">,</span>
      changeLoading<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1" aria-hidden="true">#</a> Usage</h3><p>用于调用 Table 内部方法及 table 参数配置</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// 表格的props也可以直接注册到useTable内部</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> methods<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>register</strong></p><p>register 用于注册 useTable，如果需要使用<code>useTable</code>提供的 api，必须将 register 传入组件的 onRegister</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> register <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h3><p><strong>setProps</strong></p><p>类型：<code>(props: Partial&lt;BasicTableProps&gt;) =&gt; void</code></p><p>说明: 用于设置表格参数</p><p><strong>reload</strong></p><p>类型：<code>(opt?: FetchParams) =&gt; Promise&lt;void&gt;</code></p><p>说明: 刷新表格</p><p><strong>redoHeight</strong></p><p>类型：<code>() =&gt; void</code></p><p>说明: 重新计算表格高度</p><p><strong>setLoading</strong></p><p>类型：<code>(loading: boolean) =&gt; void</code></p><p>说明: 设置表格 loading 状态</p><p><strong>getDataSource</strong></p><p>获取表格数据</p><p>类型：<code>&lt;T = Recordable&gt;() =&gt; T[]</code></p><p>说明: 获取表格数据</p><p><strong>getRawDataSource</strong></p><p>获取后端接口原始数据</p><p>类型：<code>&lt;T = Recordable&gt;() =&gt; T</code></p><p>说明: 获取后端接口原始数据</p><p><strong>getColumns</strong></p><p>类型：<code>(opt?: GetColumnsParams) =&gt; BasicColumn[]</code></p><p>说明: 获取表格数据</p><p><strong>setColumns</strong></p><p>类型：<code>(columns: BasicColumn[] | string[]) =&gt; void</code></p><p>说明: 设置表头数据</p><p><strong>setTableData</strong></p><p>类型：<code>&lt;T = Recordable&gt;(values: T[]) =&gt; void</code></p><p>说明: 设置表格数据</p><p><strong>setPagination</strong></p><p>类型：<code>(info: Partial&lt;PaginationProps&gt;) =&gt; void</code></p><p>说明: 设置分页信息</p><p><strong>deleteSelectRowByKey</strong></p><p>类型：<code>(key: string) =&gt; void</code></p><p>说明: 根据 key 删除取消选中行</p><p><strong>getSelectRowKeys</strong></p><p>类型：<code>() =&gt; string[]</code></p><p>说明: 获取选中行的 keys</p><p><strong>getSelectRows</strong></p><p>类型：<code>&lt;T = Recordable&gt;() =&gt; T[]</code></p><p>说明: 获取选中行的 rows</p><p><strong>clearSelectedRowKeys</strong></p><p>类型：<code>() =&gt; void</code></p><p>说明: 清空选中行</p><p><strong>setSelectedRowKeys</strong></p><p>类型：<code>(rowKeys: string[] | number[]) =&gt; void</code></p><p>说明: 设置选中行</p><p><strong>getPaginationRef</strong></p><p>类型：<code>() =&gt; PaginationProps | boolean</code></p><p>说明: 获取当前分页信息</p><p><strong>getShowPagination</strong></p><p>类型：<code>() =&gt; boolean</code></p><p>说明: 获取当前是否显示分页</p><p><strong>setShowPagination</strong></p><p>类型：<code>(show: boolean) =&gt; Promise&lt;void&gt;</code></p><p>说明: 设置当前是否显示分页</p><p><strong>getRowSelection</strong></p><p>类型：<code>() =&gt; TableRowSelection&lt;Recordable&gt;</code></p><p>说明: 获取勾选框信息</p><p><strong>updateTableData</strong></p><p>类型：<code>(index: number, key: string, value: any)=&gt;void</code></p><p>说明: 更新表格数据</p><p><strong>updateTableDataRecord</strong></p><p>类型： <code>(rowKey: string | number, record: Recordable) =&gt; Recordable | void</code></p><p>说明： 根据唯一的 <code>rowKey</code> 更新指定行的数据.可用于不刷新整个表格而局部更新数据</p><p><strong>deleteTableDataRecord</strong></p><p>类型： <code>(rowKey: string | number | string[] | number[]) =&gt; void</code></p><p>说明： 根据唯一的<code>rowKey</code> 动态删除指定行的数据.可用于不刷新整个表格而局部更新数据</p><p><strong>insertTableDataRecord</strong></p><p>类型： <code>(record: Recordable, index?: number) =&gt; Recordable | void</code></p><p>说明： 可根据传入的 <code>index</code> 值决定插入数据行的位置，不传则是顺序插入，可用于不刷新整个表格而局部更新数据</p><p><strong>getForm</strong></p><p>类型：<code>() =&gt; FormActionType</code></p><p>说明: 如果开启了搜索区域。可以通过该函数获取表单对象函数进行操作</p><p><strong>expandAll</strong></p><p>类型：<code>() =&gt; void</code></p><p>说明: 展开树形表格</p><p><strong>collapseAll</strong></p><p>类型：<code>() =&gt; void</code></p><p>说明: 折叠树形表格</p><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,103),k={class:"hint-container tip"},v=n("p",{class:"hint-container-title"},"温馨提醒",-1),m={href:"https://2x.antdv.com/components/table-cn/#API",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,[s("注意："),n("code",null,"defaultExpandAllRows"),s("、"),n("code",null,"defaultExpandedRowKeys"),s(" 属性在 basicTable 中不受支持，并且在"),n("code",null,"antv table"),s(" v2.2.0 之后也被移除。")],-1),g=t(`<table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td>clickToRowSelect</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>点击行是否选中 checkbox 或者 radio。需要开启</td><td></td></tr><tr><td>sortFn</td><td><code>(sortInfo: SorterResult&lt;any&gt;) =&gt; any</code></td><td>-</td><td>-</td><td>自定义排序方法。见下方全局配置说明</td><td></td></tr><tr><td>filterFn</td><td><code>(sortInfo: Partial&lt;Recordable&lt;string[]&gt;&gt;) =&gt; any</code></td><td>-</td><td>-</td><td>自定义过滤方法。见下方全局配置说明</td><td></td></tr><tr><td>showTableSetting</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>显示表格设置工具</td><td></td></tr><tr><td>tableSetting</td><td><code>TableSetting</code></td><td>-</td><td>-</td><td>表格设置工具配置，见下方 TableSetting</td><td></td></tr><tr><td>striped</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>斑马纹</td><td></td></tr><tr><td>inset</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>取消表格的默认 padding</td><td></td></tr><tr><td>autoCreateKey</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>是否自动生成 key</td><td></td></tr><tr><td>showSummary</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>是否显示合计行</td><td></td></tr><tr><td>summaryData</td><td><code>any[]</code></td><td>-</td><td>-</td><td>自定义合计数据。如果有则显示该数据</td><td></td></tr><tr><td>emptyDataIsShowTable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>在启用搜索表单的前提下，是否在表格没有数据的时候显示表格</td><td></td></tr><tr><td>summaryFunc</td><td><code>(...arg) =&gt; any[]</code></td><td>-</td><td>-</td><td>计算合计行的方法</td><td></td></tr><tr><td><s>canRowDrag</s></td><td><s><code>boolean</code></s></td><td><s><code>false</code></s></td><td>-</td><td><s>是否可拖拽行排序</s></td><td></td></tr><tr><td><s>canColDrag</s></td><td><s><code>boolean</code></s></td><td><s><code>false</code></s></td><td>-</td><td><s>是否可拖拽列</s></td><td></td></tr><tr><td>isTreeTable</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>是否树表</td><td></td></tr><tr><td>api</td><td><code>(...arg: any) =&gt; Promise&lt;any&gt;</code></td><td>-</td><td>-</td><td>请求接口，可以直接将<code>src/api内的函数直接传入</code></td><td></td></tr><tr><td>beforeFetch</td><td><code>(T)=&gt;T</code></td><td>-</td><td>-</td><td>请求之前对参数进行处理</td><td></td></tr><tr><td>afterFetch</td><td><code>(T)=&gt;T</code></td><td>-</td><td>-</td><td>请求之后对返回值进行处理</td><td></td></tr><tr><td>handleSearchInfoFn</td><td><code>(T)=&gt;T</code></td><td>-</td><td>-</td><td>开启表单后，在请求之前处理搜索条件参数</td><td></td></tr><tr><td>fetchSetting</td><td><code>FetchSetting</code></td><td>-</td><td>-</td><td>接口请求配置，可以配置请求的字段和响应的字段名，见下方全局配置说明</td><td></td></tr><tr><td>immediate</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>组件加载后是否立即请求接口，在 api 有传的情况下，如果为 false，需要自行使用 reload 加载表格数据</td><td></td></tr><tr><td>searchInfo</td><td><code>any</code></td><td>-</td><td>-</td><td>额外的请求参数</td><td></td></tr><tr><td>useSearchForm</td><td><code>boolean</code></td><td>false</td><td>-</td><td>使用搜索表单</td><td></td></tr><tr><td>formConfig</td><td><code>any</code></td><td>-</td><td>-</td><td>表单配置，参考表单组件的 Props</td><td></td></tr><tr><td>columns</td><td><code>any</code></td><td>-</td><td>-</td><td>表单列信息 BasicColumn[]</td><td></td></tr><tr><td>showIndexColumn</td><td><code>boolean</code></td><td>ture</td><td>-</td><td>是否显示序号列</td><td></td></tr><tr><td>indexColumnProps</td><td><code>any</code></td><td>-</td><td>-</td><td>序号列配置 BasicColumn</td><td></td></tr><tr><td>actionColumn</td><td><code>any</code></td><td>-</td><td>-</td><td>表格右侧操作列配置 BasicColumn</td><td></td></tr><tr><td>ellipsis</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>文本超过宽度是否显示...</td><td></td></tr><tr><td>canResize</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>是否可以自适应高度(如果置于 PageWrapper 组件内，请勿启用 PageWrapper 的 fixedHeight 属性，二者不可同时使用)</td><td></td></tr><tr><td>clearSelectOnPageChange</td><td><code>boolean</code></td><td>false</td><td>-</td><td>切换页码是否重置勾选状态</td><td></td></tr><tr><td>resizeHeightOffset</td><td><code>number</code></td><td>0</td><td>-</td><td>表格自适应高度计算结果会减去这个值</td><td></td></tr><tr><td>rowSelection</td><td><code>any</code></td><td>-</td><td>-</td><td>选择列配置</td><td></td></tr><tr><td>title</td><td><code>string</code></td><td>-</td><td>-</td><td>表格标题</td><td></td></tr><tr><td>titleHelpMessage</td><td><code>string ｜ string[]</code></td><td>-</td><td>-</td><td>表格标题右侧温馨提醒</td><td></td></tr><tr><td>maxHeight</td><td><code>number</code></td><td>-</td><td>-</td><td>表格最大高度，超出会显示滚动条</td><td></td></tr><tr><td>dataSource</td><td><code>any[]</code></td><td>-</td><td>-</td><td>表格数据，非 api 加载情况</td><td></td></tr><tr><td>bordered</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>是否显示表格边框</td><td></td></tr><tr><td>pagination</td><td><code>any</code></td><td>-</td><td>-</td><td>分页信息配置，为 <code>false</code> 不显示分页</td><td></td></tr><tr><td>loading</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>表格 loading 状态</td><td></td></tr><tr><td>scroll</td><td><code>any</code></td><td>-</td><td>-</td><td>参考官方文档 scroll</td><td></td></tr><tr><td>beforeEditSubmit</td><td><code>({record: Recordable,index: number,key: string | number,value: any}) =&gt; Promise&lt;any&gt;</code></td><td>-</td><td>-</td><td>单元格编辑状态提交回调，返回 false 将阻止单元格提交数据到 table。该回调在行编辑模式下无效。</td><td>2.7.2</td></tr></tbody></table><h3 id="tablesetting" tabindex="-1"><a class="header-anchor" href="#tablesetting" aria-hidden="true">#</a> TableSetting</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
  <span class="token comment">// 是否显示刷新按钮</span>
  redo<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// 是否显示尺寸调整按钮</span>
  size<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// 是否显示字段调整按钮</span>
  setting<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// 是否显示全屏按钮</span>
  fullScreen<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="basiccolumn" tabindex="-1"><a class="header-anchor" href="#basiccolumn" aria-hidden="true">#</a> BasicColumn</h2>`,4),h={href:"https://2x.antdv.com/components/table-cn/#Column",target:"_blank",rel:"noopener noreferrer"},y=t(`<table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th></tr></thead><tbody><tr><td>defaultHidden</td><td><code>boolean</code></td><td>false</td><td>-</td><td>默认隐藏，可在列配置显示</td></tr><tr><td>helpMessage</td><td><code>string｜string[]</code></td><td>-</td><td>-</td><td>列头右侧帮助文本</td></tr><tr><td>edit</td><td><code>boolean</code></td><td>-</td><td>-</td><td>是否开启单元格编辑</td></tr><tr><td>editRow</td><td><code>boolean</code></td><td>-</td><td>-</td><td>是否开启行编辑</td></tr><tr><td>editable</td><td><code>boolean</code></td><td>false</td><td>-</td><td>是否处于编辑状态</td></tr><tr><td>editComponent</td><td><code>ComponentType</code></td><td><code>Input</code></td><td>-</td><td>编辑组件</td></tr><tr><td>editComponentProps</td><td><code>any</code></td><td>-</td><td>-</td><td>对应编辑组件的 props</td></tr><tr><td>editRule</td><td><code>((text: string, record: Recordable) =&gt; Promise&lt;string&gt;)</code></td><td>-</td><td>-</td><td>对应编辑组件的表单校验</td></tr><tr><td>editValueMap</td><td><code>(value: any) =&gt; string</code></td><td>-</td><td>-</td><td>对应单元格值枚举</td></tr><tr><td>onEditRow</td><td><code>（）=&gt;void</code></td><td>-</td><td>-</td><td>触发行编辑</td></tr><tr><td>format</td><td><code>CellFormat</code></td><td>-</td><td>-</td><td>单元格格式化</td></tr><tr><td>auth</td><td><code>RoleEnum</code> ｜ <code>RoleEnum[]</code> ｜ <code>string</code> ｜ <code>string[]</code></td><td>-</td><td>-</td><td>根据权限编码来控制当前列是否显示</td></tr><tr><td>ifShow</td><td><code>boolean ｜ ((action: ActionItem) =&gt; boolean)</code></td><td>-</td><td>-</td><td>根据业务状态来控制当前列是否显示</td></tr></tbody></table><h3 id="editcomponenttype" tabindex="-1"><a class="header-anchor" href="#editcomponenttype" aria-hidden="true">#</a> EditComponentType</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ComponentType</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">&quot;Input&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputNumber&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Select&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;ApiSelect&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Checkbox&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Switch&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;DatePicker&quot;</span> <span class="token comment">// v2.5.0 以上</span>
  <span class="token operator">|</span> <span class="token string">&quot;TimePicker&quot;</span><span class="token punctuation">;</span> <span class="token comment">// v2.5.0 以上</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cellformat" tabindex="-1"><a class="header-anchor" href="#cellformat" aria-hidden="true">#</a> CellFormat</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">CellFormat</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token builtin">string</span>
  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> record<span class="token operator">:</span> Recordable<span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span>
  <span class="token operator">|</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h2>`,6),f={class:"hint-container tip"},q=n("p",{class:"hint-container-title"},"温馨提醒",-1),w={href:"https://2x.antdv.com/components/table-cn/#API",target:"_blank",rel:"noopener noreferrer"},x=t(`<table><thead><tr><th>事件</th><th>回调参数</th><th>说明</th></tr></thead><tbody><tr><td>fetch-success</td><td><code>Function({items,total})</code></td><td>接口请求成功后触发</td></tr><tr><td>fetch-error</td><td><code>Function(error)</code></td><td>错误信息</td></tr><tr><td>selection-change</td><td><code>Function({keys，rows})</code></td><td>勾选事件触发</td></tr><tr><td>row-click</td><td><code>Function(record, index, event)</code></td><td>行点击触发</td></tr><tr><td>row-dbClick</td><td><code>Function(record, index, event)</code></td><td>行双击触发</td></tr><tr><td>row-contextmenu</td><td><code>Function(record, index, event)</code></td><td>行右键触发</td></tr><tr><td>row-mouseenter</td><td><code>Function(record, index, event)</code></td><td>行移入触发</td></tr><tr><td>row-mouseleave</td><td><code>Function(record, index, event)</code></td><td>行移出触发</td></tr><tr><td>edit-end</td><td><code>Function({record, index, key, value})</code></td><td>单元格编辑完成触发</td></tr><tr><td>edit-cancel</td><td><code>Function({record, index, key, value})</code></td><td>单元格取消编辑触发</td></tr><tr><td>edit-row-end</td><td><code>Function()</code></td><td>行编辑结束触发</td></tr><tr><td>edit-change</td><td><code>Function({column,value,record})</code></td><td>单元格编辑组件的 value 发生变化时触发</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">edit-change 说明</p><p>从版本 <code>2.4.2</code> 起，对于 <code>edit-change</code> 事件，<code>record</code> 中的 <code>editValueRefs</code> 装载了当前行的所有编辑组件（如果有的话）的值的 <code>ref</code> 对象，可用于处理同一行中的编辑组件的联动。请看下面的例子</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onEditChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> column<span class="token punctuation">,</span> record <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 当同一行的单价或者数量发生变化时，更新合计金额（三个数据均为当前行编辑组件的值）</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">&quot;qty&quot;</span> <span class="token operator">||</span> column<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">editValueRefs</span><span class="token operator">:</span> <span class="token punctuation">{</span> total<span class="token punctuation">,</span> qty<span class="token punctuation">,</span> price <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> record<span class="token punctuation">;</span>
    total<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">unref</span><span class="token punctuation">(</span>qty<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">unref</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2>`,4),T={class:"hint-container tip"},_=n("p",{class:"hint-container-title"},"温馨提醒",-1),C={href:"https://2x.antdv.com/components/table-cn/#API",target:"_blank",rel:"noopener noreferrer"},R=t('<table><thead><tr><th>名称</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td>tableTitle</td><td>表格顶部左侧区域</td><td></td></tr><tr><td>toolbar</td><td>表格顶部右侧区域</td><td></td></tr><tr><td>expandedRowRender</td><td>展开行区域</td><td></td></tr><tr><td>headerTop</td><td>表格顶部区域（标题上方）</td><td>2.6.1</td></tr></tbody></table><h2 id="form-slots" tabindex="-1"><a class="header-anchor" href="#form-slots" aria-hidden="true">#</a> Form-Slots</h2><p>当开启 form 表单后。以<code>form-xxxx</code>为前缀的 slot 会被视为 form 的 slot</p>',3),S=t(`<p>e.g</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>form-submitBefore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="内置组件-只能用于表格内部" tabindex="-1"><a class="header-anchor" href="#内置组件-只能用于表格内部" aria-hidden="true">#</a> 内置组件（只能用于表格内部）</h2><h3 id="tableaction" tabindex="-1"><a class="header-anchor" href="#tableaction" aria-hidden="true">#</a> TableAction</h3><p>用于表格右侧操作列渲染</p><h4 id="props-1" tabindex="-1"><a class="header-anchor" href="#props-1" aria-hidden="true">#</a> Props</h4><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td>actions</td><td><code>ActionItem[]</code></td><td>-</td><td>-</td><td>右侧操作列按钮列表</td><td></td></tr><tr><td>dropDownActions</td><td><code>ActionItem[]</code></td><td>-</td><td>-</td><td>右侧操作列更多下拉按钮列表</td><td></td></tr><tr><td>stopButtonPropagation</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>是否阻止操作按钮的 click 事件冒泡</td><td>2.5.0</td></tr></tbody></table><p><strong>ActionItem</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ActionItem</span> <span class="token punctuation">{</span>
  <span class="token comment">// 按钮文本</span>
  label<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// 是否禁用</span>
  disabled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// 按钮颜色</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;error&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;warning&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// 按钮类型</span>
  type<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// button组件props</span>
  props<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token comment">// 按钮图标</span>
  icon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// 气泡确认框</span>
  popConfirm<span class="token operator">?</span><span class="token operator">:</span> PopConfirm<span class="token punctuation">;</span>
  <span class="token comment">// 是否显示分隔线，v2.0.0+</span>
  divider<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// 根据权限编码来控制当前列是否显示，v2.4.0+</span>
  auth<span class="token operator">?</span><span class="token operator">:</span> RoleEnum <span class="token operator">|</span> RoleEnum<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// 根据业务状态来控制当前列是否显示，v2.4.0+</span>
  ifShow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>action<span class="token operator">:</span> ActionItem<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 点击回调</span>
  onClick<span class="token operator">?</span><span class="token operator">:</span> Fn<span class="token punctuation">;</span>
  <span class="token comment">// Tooltip配置，2.5.3以上版本支持，可以配置为string，或者完整的tooltip属性</span>
  tooltip<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> TooltipProps<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),B={href:"https://2x.antdv.com/components/tooltip-cn#API",target:"_blank",rel:"noopener noreferrer"},P=t(`<p><strong>PopConfirm</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PopConfirm</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  okText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  cancelText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  confirm<span class="token operator">:</span> Fn<span class="token punctuation">;</span>
  cancel<span class="token operator">?</span><span class="token operator">:</span> Fn<span class="token punctuation">;</span>
  icon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tableimg" tabindex="-1"><a class="header-anchor" href="#tableimg" aria-hidden="true">#</a> TableImg</h3><p>用于渲染单元格图片,支持图片预览</p><h4 id="props-2" tabindex="-1"><a class="header-anchor" href="#props-2" aria-hidden="true">#</a> Props</h4><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td>imgList</td><td><code>string[]</code></td><td>-</td><td>-</td><td>图片地址列表</td><td></td></tr><tr><td>size</td><td><code>number</code></td><td>-</td><td>-</td><td>图片大小</td><td></td></tr><tr><td>simpleShow</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>简单显示模式（只显示第一张图片）</td><td>2.5.0</td></tr><tr><td>showBadge</td><td><code>boolean</code></td><td><code>true</code></td><td><code>true/false</code></td><td>简单模式下是否显示计数 Badge</td><td>2.5.0</td></tr><tr><td>margin</td><td><code>number</code></td><td>4</td><td>-</td><td>常规模式下的图片间距</td><td>2.5.0</td></tr><tr><td>srcPrefix</td><td><code>string</code></td><td>-</td><td>-</td><td>在每一个图片 src 前插入的内容</td><td>2.5.0</td></tr></tbody></table><h2 id="全局配置" tabindex="-1"><a class="header-anchor" href="#全局配置" aria-hidden="true">#</a> 全局配置</h2>`,7),A={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/componentSetting.ts",target:"_blank",rel:"noopener noreferrer"};function F(I,L){const e=p("ExternalLinkIcon"),o=p("RouterLink");return l(),i("div",null,[r,n("div",k,[v,n("ul",null,[n("li",null,[s("除以下参数外，官方文档内的 props 也都支持，具体可以参考 "),n("a",m,[s("antv table"),a(e)])]),b])]),g,n("p",null,[s("除 参考官方 "),n("a",h,[s("Column 配置"),a(e)]),s("外，扩展以下参数")]),y,n("div",f,[q,n("p",null,[s("除以下事件外，官方文档内的 event 也都支持，具体可以参考 "),n("a",w,[s("antv table"),a(e)])])]),x,n("div",T,[_,n("p",null,[s("除以下参数外，官方文档内的 slot 也都支持，具体可以参考 "),n("a",C,[s("antv table"),a(e)])])]),R,n("p",null,[s("xxxx 为 form 组件的 slot。具体参考"),a(o,{to:"/zh/guide/components/Common/form.html#Slots"},{default:d(()=>[s("form 组件文档")]),_:1})]),S,n("p",null,[s("有关 TooltipProps 的说明，请参考"),n("a",B,[s("tooltip"),a(e)])]),P,n("p",null,[s("在"),n("a",A,[s("componentsSettings"),a(e)]),s(" 可以配置全局参数。用于统一整个项目的风格。可以通过 props 传值覆盖")])])}const K=c(u,[["render",F],["__file","table.html.vue"]]);export{K as default};
