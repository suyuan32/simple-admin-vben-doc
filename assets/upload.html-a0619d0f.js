import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,e as t}from"./app-8654fcba.js";const e={},p=t(`<h1 id="upload" tabindex="-1"><a class="header-anchor" href="#upload" aria-hidden="true">#</a> Upload</h1><p>File upload component</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicUpload</span>
    <span class="token attr-name">:maxSize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:maxNumber</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>10<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleChange<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">:api</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>uploadApi<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicUpload <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Upload&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> uploadApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/api/sys/upload&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/hooks/web/useMessage&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicUpload <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> createMessage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      uploadApi<span class="token punctuation">,</span>
      <span class="token function-variable function">handleChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">list</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        createMessage<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">已上传文件</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h2><p><code>.env.development</code> and <code>.env.production</code> configure the file upload addresses for development and production</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># .env.development</span>

<span class="token assign-left variable">VITE_PROXY</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">&quot;/upload&quot;</span>,<span class="token string">&quot;http://localhost:3001/upload&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>

<span class="token comment"># If there is no cross-domain problem, use the real upload address directly</span>
<span class="token assign-left variable">VITE_GLOB_UPLOAD_URL</span><span class="token operator">=</span>/upload

<span class="token comment"># .env.production</span>
<span class="token assign-left variable">VITE_GLOB_UPLOAD_URL</span><span class="token operator">=</span>/upload

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th></tr></thead><tbody><tr><td>value</td><td><code>string[]</code></td><td>-</td><td>-</td><td>The list of uploaded files, supports v-model.</td></tr><tr><td>showPreviewNumber</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to show the number of previews.</td></tr><tr><td>emptyHidePreview</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether to hide the preview when no files are uploaded.</td></tr><tr><td>helpText</td><td><code>string</code></td><td>-</td><td>-</td><td>Help text.</td></tr><tr><td>maxSize</td><td><code>number</code></td><td><code>2</code></td><td>-</td><td>The maximum size of a single file, in megabytes.</td></tr><tr><td>maxNumber</td><td><code>number</code></td><td><code>Infinity</code></td><td>-</td><td>The maximum number of files that can be uploaded. If set to <code>Infinity</code>, there is no limit.</td></tr><tr><td>accept</td><td><code>string[]</code></td><td>-</td><td>-</td><td>Restrict upload formats. Can use file extensions (with or without the dot) or MIME strings. For example, <code>[&#39;.doc,&#39;,&#39;docx&#39;,&#39;application/msword&#39;,&#39;image/*&#39;]</code>.</td></tr><tr><td>multiple</td><td><code>boolean</code></td><td>-</td><td>-</td><td>Enable multiple file upload.</td></tr><tr><td>uploadParams</td><td><code>any</code></td><td>-</td><td>-</td><td>Upload parameters.</td></tr><tr><td>api</td><td><code>Function</code></td><td>-</td><td>-</td><td>The upload interface, which is the interface configured above.</td></tr></tbody></table><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><table><thead><tr><th>Name</th><th>Arguments</th><th>Description</th><th>Version</th></tr></thead><tbody><tr><td>change</td><td><code>(fileList) =&gt; void</code></td><td>Triggered when the contents of the file list change.</td><td>-</td></tr><tr><td>delete</td><td><code>(record) =&gt; void</code></td><td>The event of deleting a file in the upload list.</td><td>-</td></tr><tr><td>preview-delete</td><td><code>(url: string) =&gt; void</code></td><td>The event of deleting a file in the preview list.</td><td>2.5.3</td></tr></tbody></table>`,11),o=[p];function c(d,i){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","upload.html.vue"]]);export{r as default};
