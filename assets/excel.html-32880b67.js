import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as e,o,c as p,a as n,d as a,b as c,e as i}from"./app-36d30fb3.js";const l={},d=n("h1",{id:"excel-component",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#excel-component","aria-hidden":"true"},"#"),a(" Excel component")],-1),u=n("p",null,"Excel import and export operations",-1),r={href:"https://sheetjs.com/",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="import" tabindex="-1"><a class="header-anchor" href="#import" aria-hidden="true">#</a> Import</h2><h3 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImpExcel</span> <span class="token attr-name">@success</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>loadDataSuccess<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-3<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>导入Excel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ImpExcel</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> ImpExcel<span class="token punctuation">,</span> ExcelData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Excel&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> ImpExcel <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">function</span> <span class="token function">loadDataSuccess</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">excelDataList</span><span class="token operator">:</span> ExcelData<span class="token punctuation">[</span><span class="token punctuation">]</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>excelDataList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      loadDataSuccess<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h3><table><thead><tr><th>Name</th><th>Callback Parameters</th><th>Description</th></tr></thead><tbody><tr><td>success</td><td><code>(res:ExcelData)=&gt;void</code></td><td>Callback when import is successful</td></tr><tr><td>error</td><td><code>()=&gt;void</code></td><td>Callback when export fails</td></tr></tbody></table><h3 id="exceldata" tabindex="-1"><a class="header-anchor" href="#exceldata" aria-hidden="true">#</a> ExcelData</h3><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>header</td><td><code>string[]</code></td><td></td><td>Table header</td></tr><tr><td>results</td><td><code>T[]</code></td><td></td><td>Table data</td></tr><tr><td>meta</td><td><code>{ sheetName: string }</code></td><td></td><td>Table title</td></tr></tbody></table><h2 id="export" tabindex="-1"><a class="header-anchor" href="#export" aria-hidden="true">#</a> Export</h2><p>For more details, please refer to the full version of the example.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> jsonToSheetXlsx<span class="token punctuation">,</span> aoaToSheetXlsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Excel&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="array-format-data-export" tabindex="-1"><a class="header-anchor" href="#array-format-data-export" aria-hidden="true">#</a> Array format data export</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> aoaToSheetXlsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Excel&quot;</span><span class="token punctuation">;</span>
<span class="token comment">// 保证data顺序与header一致</span>
<span class="token function">aoaToSheetXlsx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  data<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  header<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  filename<span class="token operator">:</span> <span class="token string">&quot;二维数组方式导出excel.xlsx&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custom-export-format" tabindex="-1"><a class="header-anchor" href="#custom-export-format" aria-hidden="true">#</a> Custom export format</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> jsonToSheetXlsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Excel&quot;</span><span class="token punctuation">;</span>

<span class="token function">jsonToSheetXlsx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  data<span class="token punctuation">,</span>
  filename<span class="token punctuation">,</span>
  write2excelOpts<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以是 xlsx/html/csv/txt</span>
    bookType<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="json-format-export" tabindex="-1"><a class="header-anchor" href="#json-format-export" aria-hidden="true">#</a> Json format export</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> jsonToSheetXlsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Excel&quot;</span><span class="token punctuation">;</span>

<span class="token function">jsonToSheetXlsx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  data<span class="token punctuation">,</span>
  filename<span class="token operator">:</span> <span class="token string">&quot;使用key作为默认头部.xlsx&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">jsonToSheetXlsx</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  data<span class="token punctuation">,</span>
  header<span class="token operator">:</span> <span class="token punctuation">{</span>
    id<span class="token operator">:</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span>
    name<span class="token operator">:</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span>
    age<span class="token operator">:</span> <span class="token string">&quot;年龄&quot;</span><span class="token punctuation">,</span>
    no<span class="token operator">:</span> <span class="token string">&quot;编号&quot;</span><span class="token punctuation">,</span>
    address<span class="token operator">:</span> <span class="token string">&quot;地址&quot;</span><span class="token punctuation">,</span>
    beginTime<span class="token operator">:</span> <span class="token string">&quot;开始时间&quot;</span><span class="token punctuation">,</span>
    endTime<span class="token operator">:</span> <span class="token string">&quot;结束时间&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  filename<span class="token operator">:</span> <span class="token string">&quot;自定义头部.xlsx&quot;</span><span class="token punctuation">,</span>
  json2sheetOpts<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// 指定顺序</span>
    header<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="function" tabindex="-1"><a class="header-anchor" href="#function" aria-hidden="true">#</a> Function</h2><table><thead><tr><th>Name</th><th>Callback Parameters</th><th>Return Value</th><th>Description</th></tr></thead><tbody><tr><td>jsonToSheetXlsx</td><td><code>Function(JsonToSheet)</code></td><td></td><td>Export JSON data to excel</td></tr><tr><td>aoaToSheetXlsx</td><td><code>Function(AoAToSheet)</code></td><td></td><td>Export array data to excel</td></tr></tbody></table><h3 id="jsontosheet-type" tabindex="-1"><a class="header-anchor" href="#jsontosheet-type" aria-hidden="true">#</a> JsonToSheet Type</h3><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td><code>T[]</code></td><td></td><td>Array of JSON objects to be exported</td></tr><tr><td>header?:</td><td><code>T</code>;</td><td></td><td>If not set, the <code>key</code> of the JSON object is used as the <code>header</code></td></tr><tr><td>filename?:</td><td><code>string</code></td><td><code>excel-list.xlsx</code></td><td>Name of the exported file</td></tr><tr><td>json2sheetOpts?:</td><td><code>JSON2SheetOpts</code></td><td></td><td>Optional parameters for <code>XLSX.utils.json_to_sheet</code></td></tr><tr><td>write2excelOpts?:</td><td><code>WritingOptions</code></td><td><code>{ bookType: &#39;xlsx&#39; }</code></td><td>Optional parameters for <code>XLSX.writeFile</code>, refer to XLSX documentation for details</td></tr></tbody></table><h3 id="aoatosheet-type" tabindex="-1"><a class="header-anchor" href="#aoatosheet-type" aria-hidden="true">#</a> AoAToSheet Type</h3><table><thead><tr><th>Name</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td>data</td><td><code>T[][]</code></td><td></td><td>Two-dimensional array to be exported</td></tr><tr><td>header?:</td><td><code>T</code>;</td><td></td><td>Header; if not set, there is no header</td></tr><tr><td>filename?:</td><td><code>string</code></td><td><code>excel-list.xlsx</code></td><td>Name of the exported file</td></tr><tr><td>write2excelOpts?:</td><td><code>WritingOptions</code></td><td><code>{ bookType: &#39;xlsx&#39; }</code></td><td>Optional parameters for <code>XLSX.writeFile</code>, refer to XLSX documentation for details</td></tr></tbody></table>`,22);function h(m,v){const s=e("ExternalLinkIcon");return o(),p("div",null,[d,u,n("p",null,[a("XLSX is used in the project. For specific documents, please refer to "),n("a",r,[a("XLSX Documentation"),c(s)])]),k])}const f=t(l,[["render",h],["__file","excel.html.vue"]]);export{f as default};
