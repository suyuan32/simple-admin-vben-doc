import{_ as p}from"./i18n-1b9864aa.js";import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as l,c as i,a as s,d as n,b as e,e as t}from"./app-cf691029.js";const u={},r=s("h1",{id:"国际化",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#国际化","aria-hidden":"true"},"#"),n(" 国际化")],-1),d={href:"https://marketplace.visualstudio.com/items?itemName=Lokalise.i18n-ally",target:"_blank",rel:"noopener noreferrer"},k=t('<h2 id="i18n-ally-插件" tabindex="-1"><a class="header-anchor" href="#i18n-ally-插件" aria-hidden="true">#</a> I18n-ally 插件</h2><p>安装了该插件后，你的代码内可以实时看到对应的语言内容</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="配置默认语言" tabindex="-1"><a class="header-anchor" href="#配置默认语言" aria-hidden="true">#</a> 配置默认语言</h2>',4),v={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/localeSetting.ts",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token constant">LOCALE</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> LocaleType <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">ZH_CN</span><span class="token operator">:</span> <span class="token string">&quot;zh_CN&quot;</span><span class="token punctuation">,</span>
  <span class="token constant">EN_US</span><span class="token operator">:</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> localeSetting<span class="token operator">:</span> LocaleSetting <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// 是否显示语言选择器</span>
  showPicker<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token comment">// 当前语言</span>
  locale<span class="token operator">:</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">ZH_CN</span><span class="token punctuation">,</span>
  <span class="token comment">// 默认语言</span>
  fallback<span class="token operator">:</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">ZH_CN</span><span class="token punctuation">,</span>
  <span class="token comment">// 允许的语言</span>
  availableLocales<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">ZH_CN</span><span class="token punctuation">,</span> <span class="token constant">LOCALE</span><span class="token punctuation">.</span><span class="token constant">EN_US</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 配置语言列表</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> localeList<span class="token operator">:</span> DropMenu<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    text<span class="token operator">:</span> <span class="token string">&quot;简体中文&quot;</span><span class="token punctuation">,</span>
    event<span class="token operator">:</span> <span class="token string">&quot;zh_CN&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    text<span class="token operator">:</span> <span class="token string">&quot;English&quot;</span><span class="token punctuation">,</span>
    event<span class="token operator">:</span> <span class="token string">&quot;en&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2>`,2),b={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/setupI18n.ts",target:"_blank",rel:"noopener noreferrer"},h=s("h3",{id:"语言文件",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#语言文件","aria-hidden":"true"},"#"),n(" 语言文件")],-1),g={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/lang",target:"_blank",rel:"noopener noreferrer"},f=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># locales/lang/</span>

<span class="token comment"># 中文语言</span>
zh_CN:
  component: 组件相关
  layout: 布局相关
  routes: 路由菜单相关
  sys: 系统页面相关

en: 同上

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="语言导入逻辑说明" tabindex="-1"><a class="header-anchor" href="#语言导入逻辑说明" aria-hidden="true">#</a> 语言导入逻辑说明</h3><ol><li>初始化</li></ol>`,3),y={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/setupI18n.ts",target:"_blank",rel:"noopener noreferrer"},_=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> defaultLocal <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./lang/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>locale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.ts</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会导入 <code>src/locales/lang/{lang}.ts</code> 文件语言包，此文件会导入对应语言下的所有文件。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> genMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;../helper&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> antdLocale <span class="token keyword">from</span> <span class="token string">&quot;ant-design-vue/es/locale/zh_CN&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> momentLocale <span class="token keyword">from</span> <span class="token string">&quot;moment/dist/locale/zh-cn&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> modules <span class="token operator">=</span> <span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span><span class="token function">globEager</span><span class="token punctuation">(</span><span class="token string">&quot;./zh_CN/**/*.ts&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  message<span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token operator">...</span><span class="token function">genMessage</span><span class="token punctuation">(</span>modules<span class="token punctuation">,</span> <span class="token string">&quot;zh_CN&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    antdLocale<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  momentLocale<span class="token punctuation">,</span>
  momentLocaleName<span class="token operator">:</span> <span class="token string">&quot;zh-cn&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并将其按相应的目录结构转化为多层级的</p><p>例:</p><p><code>lang/zh_CN/components/modal.ts</code> 的文件内容为</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token string">&quot;标题&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>则在使用的使用直接使用 <code>t(&#39;components.modal.title&#39;)</code> 进行获取。</p><p>这样做的好处在于更容易管理大型项目的多语言。如果不需要分模块划分，可以直接自己手动导入即可。</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>引入项目自带的 <code>useI18n</code> <strong>注意不要引入 vue-i18n 的 useI18n</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useI18n <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/hooks/web/useI18n&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> t <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useI18n</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token function">t</span><span class="token punctuation">(</span><span class="token string">&quot;components.modal.title&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="切换语言" tabindex="-1"><a class="header-anchor" href="#切换语言" aria-hidden="true">#</a> 切换语言</h2>`,13),w={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/useLocale.ts",target:"_blank",rel:"noopener noreferrer"},L=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useLocale <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/locales/useLocale&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> changeLocale <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useLocale</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">changeLocale</span><span class="token punctuation">(</span><span class="token string">&quot;en&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="新增" tabindex="-1"><a class="header-anchor" href="#新增" aria-hidden="true">#</a> 新增</h2><h3 id="语言文件-1" tabindex="-1"><a class="header-anchor" href="#语言文件-1" aria-hidden="true">#</a> 语言文件</h3>`,3),x={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/lang",target:"_blank",rel:"noopener noreferrer"},q=s("h3",{id:"新增语言",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#新增语言","aria-hidden":"true"},"#"),n(" 新增语言")],-1),I=s("p",null,[n("目前项目自带的语言只有 "),s("code",null,"zh_CN"),n(" 和 "),s("code",null,"en"),n(" 两种")],-1),N=s("p",null,"如果需要新增，按以下操作即可",-1),C={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/lang",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/types/config",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/localeSetting.ts",target:"_blank",rel:"noopener noreferrer"},z=t(`<h2 id="远程读取语言数据" tabindex="-1"><a class="header-anchor" href="#远程读取语言数据" aria-hidden="true">#</a> 远程读取语言数据</h2><p>目前项目会在 <code>src/main.ts</code> 内等待 <code>setupI18n</code> 这个函数执行完之后才会渲染界面，所以只需在 setupI18n 内发送 ajax 请求，将对应的数据设置到 i18n 实例上即可</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/main.ts</span>
<span class="token keyword">await</span> <span class="token function">setupI18n</span><span class="token punctuation">(</span>app<span class="token punctuation">)</span><span class="token punctuation">;</span>

app<span class="token punctuation">.</span><span class="token function">mount</span><span class="token punctuation">(</span><span class="token string">&quot;#app&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setupi18n-函数" tabindex="-1"><a class="header-anchor" href="#setupi18n-函数" aria-hidden="true">#</a> setupI18n 函数</h3>`,4),S={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/setupI18n.ts",target:"_blank",rel:"noopener noreferrer"},M=t(`<p>如下所示，这里会先设置一个默认语言，默认语言可以设置在本地，也可以在这里等待接口返回默认语言</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// setup i18n instance with glob</span>
<span class="token keyword">export</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">setupI18n</span><span class="token punctuation">(</span>app<span class="token operator">:</span> App<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">createI18nOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  i18n <span class="token operator">=</span> <span class="token function">createI18n</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span> <span class="token keyword">as</span> I18n<span class="token punctuation">;</span>
  app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>i18n<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">createI18nOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token operator">&lt;</span>I18nOptions<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> locale <span class="token operator">=</span> localeStore<span class="token punctuation">.</span>getLocale<span class="token punctuation">;</span>

  <span class="token comment">// 这里改成接口获取</span>
  <span class="token keyword">const</span> defaultLocal <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./lang/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>locale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.ts</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> message <span class="token operator">=</span> defaultLocal<span class="token punctuation">.</span>default<span class="token operator">?.</span>message <span class="token operator">??</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    legacy<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    locale<span class="token punctuation">,</span>
    fallbackLocale<span class="token operator">:</span> fallback<span class="token punctuation">,</span>
    messages<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>locale<span class="token punctuation">]</span><span class="token operator">:</span> message<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    availableLocales<span class="token operator">:</span> availableLocales<span class="token punctuation">,</span>
    sync<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    silentTranslationWarn<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    missingWarn<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    silentFallbackWarn<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="changelocale-函数" tabindex="-1"><a class="header-anchor" href="#changelocale-函数" aria-hidden="true">#</a> changeLocale 函数</h3>`,3),O={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/locales/useLocale",target:"_blank",rel:"noopener noreferrer"},A=t(`<p>当手动切换语言的时候会触发 <code>useLocale</code> 函数，useLocale 也是异步函数，只需等待接口返回响应的数据后，再进行设置即可</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">changeLocale</span><span class="token punctuation">(</span>locale<span class="token operator">:</span> LocaleType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> globalI18n <span class="token operator">=</span> i18n<span class="token punctuation">.</span>global<span class="token punctuation">;</span>
  <span class="token keyword">const</span> currentLocale <span class="token operator">=</span> <span class="token function">unref</span><span class="token punctuation">(</span>globalI18n<span class="token punctuation">.</span>locale<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>currentLocale <span class="token operator">===</span> locale<span class="token punctuation">)</span> <span class="token keyword">return</span> locale<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>loadLocalePool<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>locale<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setI18nLanguage</span><span class="token punctuation">(</span>locale<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> locale<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// 这里改成接口获取</span>
  <span class="token keyword">const</span> langModule <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">await</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">./lang/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>locale<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.ts</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span>default <span class="token keyword">as</span> LangModule<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>langModule<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> message<span class="token punctuation">,</span> momentLocale<span class="token punctuation">,</span> momentLocaleName <span class="token punctuation">}</span> <span class="token operator">=</span> langModule<span class="token punctuation">;</span>

  globalI18n<span class="token punctuation">.</span><span class="token function">setLocaleMessage</span><span class="token punctuation">(</span>locale<span class="token punctuation">,</span> message<span class="token punctuation">)</span><span class="token punctuation">;</span>
  moment<span class="token punctuation">.</span><span class="token function">updateLocale</span><span class="token punctuation">(</span>momentLocaleName<span class="token punctuation">,</span> momentLocale<span class="token punctuation">)</span><span class="token punctuation">;</span>
  loadLocalePool<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>locale<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">setI18nLanguage</span><span class="token punctuation">(</span>locale<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> locale<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function H(P,T){const a=c("ExternalLinkIcon");return l(),i("div",null,[r,s("p",null,[n("如果你使用的 vscode 开发工具，则推荐安装 "),s("a",d,[n("I18n-ally"),e(a)]),n(" 这个插件")]),k,s("p",null,[n("在 "),s("a",v,[n("src/settings/localeSetting.ts"),e(a)]),n(" 内可以配置默认语言")]),m,s("p",null,[n("在 "),s("a",b,[n("src/locales/setupI18n.ts"),e(a)]),n(" 内引入的 i18n 这个无需修改")]),h,s("p",null,[n("在 "),s("a",g,[n("src/locales/lang/"),e(a)]),n(" 可以配置具体的语言")]),f,s("p",null,[n("在 "),s("a",y,[n("src/locales/setupI18n"),e(a)]),n(" 内的根语言文件可以看到")]),_,s("p",null,[n("切换语言需要使用 "),s("a",w,[n("src/locales/useLocale.ts"),e(a)])]),L,s("p",null,[n("在 "),s("a",x,[n("src/locales/lang/"),e(a)]),n(" 增加对应语言的文件即可")]),q,I,N,s("ol",null,[s("li",null,[n("在 "),s("a",C,[n("src/locales/lang/"),e(a)]),n(" 下新增相应的语言目录及语言文件并引入 引入 ant-design-vue 和 moment 对应的语言包")]),s("li",null,[n("在 "),s("a",j,[n("types/config.d.ts"),e(a)]),n(" 内加上预览类型定义")]),s("li",null,[n("在 "),s("a",E,[n("src/settings/localeSetting.ts"),e(a)]),n(" 修改语言配置")])]),z,s("p",null,[n("代码: "),s("a",S,[n("src/locales/setupI18n/"),e(a)])]),M,s("p",null,[n("代码: "),s("a",O,[n("src/locales/useLocale/"),e(a)])]),A])}const W=o(u,[["render",H],["__file","i18n.html.vue"]]);export{W as default};
