import{_ as c}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as i,a as s,d as n,b as a,w as d,e as t}from"./app-ac6ee43d.js";const r={},u=t(`<h1 id="table-form" tabindex="-1"><a class="header-anchor" href="#table-form" aria-hidden="true">#</a> Table form</h1><p>Encapsulate the table component of <code>antv</code></p><blockquote><p>If not in the documentation, try looking for it in the online examples</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h3 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>基础示例<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">titleHelpMessage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>温馨提醒<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:dataSource</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:canResize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:loading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:striped</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:bordered</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:pagination</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ pageSize: 20 }<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#toolbar</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-button</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>primary<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> 操作按钮 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a-button</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BasicTable</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicColumn<span class="token punctuation">,</span> BasicTable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Table&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
          <span class="token literal-property property">align</span><span class="token operator">:</span> <span class="token string">&quot;left&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span> <span class="token keyword">as</span> BasicColumn<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="template-example" tabindex="-1"><a class="header-anchor" href="#template-example" aria-hidden="true">#</a> template example</h3><p>See <code>Methods</code> description below for all callable functions</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span>
      <span class="token attr-name">:canResize</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>RefTable示例<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">titleHelpMessage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>使用Ref调用表格内方法<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tableRef<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:api</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>api<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:columns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>columns<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>id<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:rowSelection</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ type: &#39;checkbox&#39; }<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref<span class="token punctuation">,</span> unref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicTable<span class="token punctuation">,</span> TableActionType <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Table&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getBasicColumns<span class="token punctuation">,</span> getBasicShortColumns <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./tableData&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> demoListApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/api/demo/table&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> tableRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>Nullable<span class="token operator">&lt;</span>TableActionType<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">getTableAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> tableAction <span class="token operator">=</span> <span class="token function">unref</span><span class="token punctuation">(</span>tableRef<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>tableAction<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;tableAction is null&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> tableAction<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">changeLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">getTableAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">getTableAction</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      tableRef<span class="token punctuation">,</span>
      <span class="token literal-property property">api</span><span class="token operator">:</span> demoListApi<span class="token punctuation">,</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getBasicColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      changeLoading<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="basiccolumn-and-tableaction-display-hidden-examples-through-permissions-and-business-controls" tabindex="-1"><a class="header-anchor" href="#basiccolumn-and-tableaction-display-hidden-examples-through-permissions-and-business-controls" aria-hidden="true">#</a> BasicColumn and tableAction display hidden examples through permissions and business controls</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>p-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>registerTable<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ record }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TableAction</span>
          <span class="token attr-name">:actions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[
            {
              label: &#39;编辑&#39;,
              onClick: handleEdit.bind(null, record),
              auth: &#39;other&#39;, // 根据权限控制是否显示: 无权限，不显示
            },
            {
              label: &#39;删除&#39;,
              icon: &#39;ic:outline-delete-outline&#39;,
              onClick: handleDelete.bind(null, record),
              auth: &#39;super&#39;, // 根据权限控制是否显示: 有权限，会显示
            },
          ]<span class="token punctuation">&quot;</span></span>
          <span class="token attr-name">:dropDownActions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>[
            {
              label: &#39;启用&#39;,
              popConfirm: {
                title: &#39;是否启用？&#39;,
                confirm: handleOpen.bind(null, record),
              },
              ifShow: (_action) =&gt; {
                return record.status !== &#39;enable&#39;; // 根据业务控制是否显示: 非enable状态的不显示启用按钮
              },
            },
            {
              label: &#39;禁用&#39;,
              popConfirm: {
                title: &#39;是否禁用？&#39;,
                confirm: handleOpen.bind(null, record),
              },
              ifShow: () =&gt; {
                return record.status === &#39;enable&#39;; // 根据业务控制是否显示: enable状态的显示禁用按钮
              },
            },
            {
              label: &#39;同时控制&#39;,
              popConfirm: {
                title: &#39;是否动态显示？&#39;,
                confirm: handleOpen.bind(null, record),
              },
              auth: &#39;super&#39;, // 同时根据权限和业务控制是否显示
              ifShow: () =&gt; {
                return true; // 根据业务控制是否显示
              },
            },
          ]<span class="token punctuation">&quot;</span></span>
        <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BasicTable</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  BasicTable<span class="token punctuation">,</span>
  useTable<span class="token punctuation">,</span>
  BasicColumn<span class="token punctuation">,</span>
  TableAction<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Table&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> demoListApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/api/demo/table&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token literal-property property">columns</span><span class="token operator">:</span> BasicColumn<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 根据权限控制是否显示: 无权限，不显示</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;地址&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;address&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">auth</span><span class="token operator">:</span> <span class="token string">&quot;super&quot;</span><span class="token punctuation">,</span> <span class="token comment">// 同时根据权限控制是否显示</span>
    <span class="token function-variable function">ifShow</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">_column</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 根据业务控制是否显示</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable<span class="token punctuation">,</span> TableAction <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>registerTable<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;TableAction组件及固定列示例&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">api</span><span class="token operator">:</span> demoListApi<span class="token punctuation">,</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> columns<span class="token punctuation">,</span>
      <span class="token literal-property property">bordered</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">actionColumn</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">250</span><span class="token punctuation">,</span>
        <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;Action&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">&quot;action&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">customRender</span><span class="token operator">:</span> <span class="token string">&quot;action&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">handleEdit</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">record</span><span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了编辑&quot;</span><span class="token punctuation">,</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">handleDelete</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">record</span><span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了删除&quot;</span><span class="token punctuation">,</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">function</span> <span class="token function">handleOpen</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">record</span><span class="token operator">:</span> Recordable</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;点击了启用&quot;</span><span class="token punctuation">,</span> record<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      registerTable<span class="token punctuation">,</span>
      handleEdit<span class="token punctuation">,</span>
      handleDelete<span class="token punctuation">,</span>
      handleOpen<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usetable" tabindex="-1"><a class="header-anchor" href="#usetable" aria-hidden="true">#</a> useTable</h2><p>Use the <strong>useTable</strong> that comes with the component to facilitate the use of forms</p><p>Here is an example using a simple table,</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>registerTable<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicTable<span class="token punctuation">,</span> useTable <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/components/Table&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> getBasicColumns<span class="token punctuation">,</span> getBasicShortColumns <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./tableData&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> demoListApi <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;/@/api/demo/table&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicTable <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>
      registerTable<span class="token punctuation">,</span>
      <span class="token punctuation">{</span>
        setLoading<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">api</span><span class="token operator">:</span> demoListApi<span class="token punctuation">,</span>
      <span class="token literal-property property">columns</span><span class="token operator">:</span> <span class="token function">getBasicColumns</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">function</span> <span class="token function">changeLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      registerTable<span class="token punctuation">,</span>
      changeLoading<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1" aria-hidden="true">#</a> Usage</h3><p>Used to call Table internal methods and table parameter configuration</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Table props can also be directly registered inside useTable</span>
<span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> methods<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>register</strong></p><p><code>register</code> is used to register useTable, if you need to use the api provided by <code>useTable</code>, you must pass register to onRegister of the component</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicTable</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useTable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> register <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h3><p><strong>setProps</strong></p><p>Type: <code>(props: Partial&lt;BasicTableProps&gt;) =&gt; void</code></p><p>Description: Used to set the table parameters.</p><p><strong>reload</strong></p><p>Type: <code>(opt?: FetchParams) =&gt; Promise&lt;void&gt;</code></p><p>Description: Refresh the table.</p><p><strong>redoHeight</strong></p><p>Type: <code>() =&gt; void</code></p><p>Description: Recalculate the height of the table.</p><p><strong>setLoading</strong></p><p>Type: <code>(loading: boolean) =&gt; void</code></p><p>Description: Set the loading state of the table.</p><p><strong>getDataSource</strong></p><p>Type: <code>&lt;T = Recordable&gt;() =&gt; T[]</code></p><p>Description: Get the table data.</p><p><strong>getRawDataSource</strong></p><p>Type: <code>&lt;T = Recordable&gt;() =&gt; T</code></p><p>Description: Get the original data from the backend interface.</p><p><strong>getColumns</strong></p><p>Type: <code>(opt?: GetColumnsParams) =&gt; BasicColumn[]</code></p><p>Description: Get the table columns.</p><p><strong>setColumns</strong></p><p>Type: <code>(columns: BasicColumn[] | string[]) =&gt; void</code></p><p>Description: Set the table header data.</p><p><strong>setTableData</strong></p><p>Type: <code>&lt;T = Recordable&gt;(values: T[]) =&gt; void</code></p><p>Description: Set the table data.</p><p><strong>setPagination</strong></p><p>Type: <code>(info: Partial&lt;PaginationProps&gt;) =&gt; void</code></p><p>Description: Set the pagination information.</p><p><strong>deleteSelectRowByKey</strong></p><p>Type: <code>(key: string) =&gt; void</code></p><p>Description: Remove the selected row by key.</p><p><strong>getSelectRowKeys</strong></p><p>Type: <code>() =&gt; string[]</code></p><p>Description: Get the keys of the selected rows.</p><p><strong>getSelectRows</strong></p><p>Type: <code>&lt;T = Recordable&gt;() =&gt; T[]</code></p><p>Description: Get the selected rows.</p><p><strong>clearSelectedRowKeys</strong></p><p>Type: <code>() =&gt; void</code></p><p>Description: Clear the selected rows.</p><p><strong>setSelectedRowKeys</strong></p><p>Type: <code>(rowKeys: string[] | number[]) =&gt; void</code></p><p>Description: Set the selected rows.</p><p><strong>getPaginationRef</strong></p><p>Type: <code>() =&gt; PaginationProps | boolean</code></p><p>Description: Get the current pagination information.</p><p><strong>getShowPagination</strong></p><p>Type: <code>() =&gt; boolean</code></p><p>Description: Get whether to display pagination.</p><p><strong>setShowPagination</strong></p><p>Type: <code>(show: boolean) =&gt; Promise&lt;void&gt;</code></p><p>Description: Set whether to display pagination.</p><p><strong>getRowSelection</strong></p><p>Type: <code>() =&gt; TableRowSelection&lt;Recordable&gt;</code></p><p>Description: Get the checkbox information.</p><p><strong>updateTableData</strong></p><p>Type: <code>(index: number, key: string, value: any) =&gt; void</code></p><p>Description: Update table data.</p><p><strong>updateTableDataRecord</strong></p><p>Type: <code>(rowKey: string | number, record: Recordable) =&gt; Recordable | void</code></p><p>Description: Update data for a specified row based on the unique <code>rowKey</code>. This can be used to update data locally without refreshing the entire table.</p><p><strong>deleteTableDataRecord</strong></p><p>Type: <code>(rowKey: string | number | string[] | number[]) =&gt; void</code></p><p>Description: Dynamically delete data for specified rows based on the unique <code>rowKey</code>. This can be used to update data locally without refreshing the entire table.</p><p><strong>insertTableDataRecord</strong></p><p>Type: <code>(record: Recordable, index?: number) =&gt; Recordable | void</code></p><p>Description: Insert data rows based on the <code>index</code> value passed in. If not passed in, the data will be inserted in order. This can be used to update data locally without refreshing the entire table.</p><p><strong>getForm</strong></p><p>Type: <code>() =&gt; FormActionType</code></p><p>Description: If the search area is enabled, this function can be used to obtain the form object function for operation.</p><p><strong>expandAll</strong></p><p>Type: <code>() =&gt; void</code></p><p>Description: Expand the tree table.</p><p><strong>collapseAll</strong></p><p>Type: <code>() =&gt; void</code></p><p>Description: Collapse the tree table.</p><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,101),k={class:"hint-container tip"},m=s("p",{class:"hint-container-title"},"Friendly reminder",-1),v={href:"https://2x.antdv.com/components/table-cn/#API",target:"_blank",rel:"noopener noreferrer"},b=s("li",null,[n("Note: the "),s("code",null,"defaultExpandAllRows"),n(" and "),s("code",null,"defaultExpandedRowKeys"),n(" properties are not supported in "),s("code",null,"basicTable"),n(", and have also been removed in "),s("code",null,"antv table"),n(" v2.2.0.")],-1),h=t(`<table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th><th>Version</th></tr></thead><tbody><tr><td>clickToRowSelect</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to select the checkbox or radio when clicking on a row. Requires enabling.</td><td></td></tr><tr><td>sortFn</td><td><code>(sortInfo: SorterResult&lt;any&gt;) =&gt; any</code></td><td>-</td><td>-</td><td>Custom sorting method. See global configuration instructions below.</td><td></td></tr><tr><td>filterFn</td><td><code>(sortInfo: Partial&lt;Recordable&lt;string[]&gt;&gt;) =&gt; any</code></td><td>-</td><td>-</td><td>Custom filtering method. See global configuration instructions below.</td><td></td></tr><tr><td>showTableSetting</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether to show the table setting tool.</td><td></td></tr><tr><td>tableSetting</td><td><code>TableSetting</code></td><td>-</td><td>-</td><td>Table setting tool configuration. See <code>TableSetting</code> below.</td><td></td></tr><tr><td>striped</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to use zebra stripes.</td><td></td></tr><tr><td>inset</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether to cancel the default padding of the table.</td><td></td></tr><tr><td>autoCreateKey</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to generate keys automatically.</td><td></td></tr><tr><td>showSummary</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether to show the summary row.</td><td></td></tr><tr><td>summaryData</td><td><code>any[]</code></td><td>-</td><td>-</td><td>Custom summary data. If there is, it will be displayed.</td><td></td></tr><tr><td>emptyDataIsShowTable</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to show the table when there is no data in the table, with the search form enabled.</td><td></td></tr><tr><td>summaryFunc</td><td><code>(...arg) =&gt; any[]</code></td><td>-</td><td>-</td><td>Method for calculating the summary row.</td><td></td></tr><tr><td><s>canRowDrag</s></td><td><s><code>boolean</code></s></td><td><s><code>false</code></s></td><td>-</td><td><s>Whether rows can be dragged to sort.</s></td><td></td></tr><tr><td><s>canColDrag</s></td><td><s><code>boolean</code></s></td><td><s><code>false</code></s></td><td>-</td><td><s>Whether columns can be dragged.</s></td><td></td></tr><tr><td>isTreeTable</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether it is a tree table.</td><td></td></tr><tr><td>api</td><td><code>(...arg: any) =&gt; Promise&lt;any&gt;</code></td><td>-</td><td>-</td><td>Request interface, can directly pass in the function in <code>src/api</code>.</td><td></td></tr><tr><td>beforeFetch</td><td><code>(T)=&gt;T</code></td><td>-</td><td>-</td><td>Process parameters before the request.</td><td></td></tr><tr><td>afterFetch</td><td><code>(T)=&gt;T</code></td><td>-</td><td>-</td><td>Process return value after the request.</td><td></td></tr><tr><td>handleSearchInfoFn</td><td><code>(T)=&gt;T</code></td><td>-</td><td>-</td><td>Process search parameter before request when search form is enabled.</td><td></td></tr><tr><td>fetchSetting</td><td><code>FetchSetting</code></td><td>-</td><td>-</td><td>Interface request configuration, can configure the request fields and response field names. See global configuration instructions below.</td><td></td></tr><tr><td>immediate</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to request the interface immediately after the component is loaded. If <code>api</code> is passed in and <code>false</code>, you need to use <code>reload</code> to load the table data.</td><td></td></tr><tr><td>searchInfo</td><td><code>any</code></td><td>-</td><td>-</td><td>Additional request parameters.</td><td></td></tr><tr><td>useSearchForm</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether to use the search form.</td><td></td></tr><tr><td>formConfig</td><td><code>any</code></td><td>-</td><td>-</td><td>Form configuration, refer to the props of the form component.</td><td></td></tr><tr><td>columns</td><td><code>any</code></td><td>-</td><td>-</td><td>Column information of the table.</td><td></td></tr><tr><td>showIndexColumn</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to display the index column.</td><td></td></tr><tr><td>indexColumnProps</td><td><code>any</code></td><td>-</td><td>-</td><td>Configuration for the index column.</td><td></td></tr><tr><td>actionColumn</td><td><code>any</code></td><td>-</td><td>-</td><td>Configuration for the action column on the right side of the table.</td><td></td></tr><tr><td>ellipsis</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether to show <code>...</code> when text exceeds the width.</td><td></td></tr><tr><td>canResize</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>Whether the height can be adaptive. (If placed in the <code>PageWrapper</code> component, do not enable the <code>fixedHeight</code> property of the <code>PageWrapper</code>, and the two cannot be used at the same time.)</td><td></td></tr><tr><td>clearSelectOnPageChange</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether to reset the selection status when changing the page number.</td><td></td></tr><tr><td>resizeHeightOffset</td><td><code>number</code></td><td><code>0</code></td><td>-</td><td>The result of the table&#39;s adaptive height calculation will be reduced by this value.</td><td></td></tr><tr><td>rowSelection</td><td><code>any</code></td><td>-</td><td>-</td><td>Configuration for the selection column.</td><td></td></tr><tr><td>title</td><td><code>string</code></td><td>-</td><td>-</td><td>Title of the table.</td><td></td></tr><tr><td>titleHelpMessage</td><td><code>string ｜ string[]</code></td><td>-</td><td>-</td><td>Friendly reminder on the right side of the table title.</td><td></td></tr><tr><td>maxHeight</td><td><code>number</code></td><td>-</td><td>-</td><td>The maximum height of the table, and a scrollbar will appear if it exceeds it.</td><td></td></tr><tr><td>dataSource</td><td><code>any[]</code></td><td>-</td><td>-</td><td>Table data, not loaded through <code>api</code>.</td><td></td></tr><tr><td>bordered</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether to show the table border.</td><td></td></tr><tr><td>pagination</td><td><code>any</code></td><td>-</td><td>-</td><td>Configuration for pagination, <code>false</code> to hide pagination.</td><td></td></tr><tr><td>loading</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Loading state of the table.</td><td></td></tr><tr><td>scroll</td><td><code>any</code></td><td>-</td><td>-</td><td>Refer to the <code>scroll</code> prop in the official documentation.</td><td></td></tr><tr><td>beforeEditSubmit</td><td><code>({record: Recordable,index: number,key: string | number,value: any}) =&gt; Promise&lt;any&gt;</code></td><td>-</td><td>-</td><td>Callback function for submitting the edited cell state, returning <code>false</code> will prevent the cell from submitting data to the table. This callback is invalid in row editing mode.</td><td><code>2.7.2</code></td></tr></tbody></table><h3 id="tablesetting" tabindex="-1"><a class="header-anchor" href="#tablesetting" aria-hidden="true">#</a> TableSetting</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token punctuation">{</span>
  <span class="token comment">// Whether to show the refresh button.</span>
  redo<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// Whether to show the size adjustment button.</span>
  size<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// Whether to show the field adjustment button.</span>
  setting<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// Whether to show the full screen button.</span>
  fullScreen<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="basiccolumn" tabindex="-1"><a class="header-anchor" href="#basiccolumn" aria-hidden="true">#</a> BasicColumn</h2>`,4),g={href:"https://2x.antdv.com/components/table-cn/#Column",target:"_blank",rel:"noopener noreferrer"},f=s("code",null,"Column",-1),y=t(`<table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th></tr></thead><tbody><tr><td>defaultHidden</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether the column is hidden by default and can be displayed in the column configuration.</td></tr><tr><td>helpMessage</td><td><code>string｜string[]</code></td><td>-</td><td>-</td><td>Help text on the right side of the column header.</td></tr><tr><td>edit</td><td><code>boolean</code></td><td>-</td><td>-</td><td>Whether to enable cell editing.</td></tr><tr><td>editRow</td><td><code>boolean</code></td><td>-</td><td>-</td><td>Whether to enable row editing.</td></tr><tr><td>editable</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>Whether the cell is in editing state.</td></tr><tr><td>editComponent</td><td><code>ComponentType</code></td><td><code>Input</code></td><td>-</td><td>Editing component.</td></tr><tr><td>editComponentProps</td><td><code>any</code></td><td>-</td><td>-</td><td>Props for the corresponding editing component.</td></tr><tr><td>editRule</td><td><code>((text: string, record: Recordable) =&gt; Promise&lt;string&gt;)</code></td><td>-</td><td>-</td><td>Form validation for the corresponding editing component.</td></tr><tr><td>editValueMap</td><td><code>(value: any) =&gt; string</code></td><td>-</td><td>-</td><td>Enumeration of the corresponding cell value.</td></tr><tr><td>onEditRow</td><td><code>（）=&gt;void</code></td><td>-</td><td>-</td><td>Trigger row editing.</td></tr><tr><td>format</td><td><code>CellFormat</code></td><td>-</td><td>-</td><td>Cell formatting.</td></tr><tr><td>auth</td><td><code>RoleEnum</code> ｜ <code>RoleEnum[]</code> ｜ <code>string</code> ｜ <code>string[]</code></td><td>-</td><td>-</td><td>Control whether the current column is displayed based on the permission code.</td></tr><tr><td>ifShow</td><td><code>boolean ｜ ((action: ActionItem) =&gt; boolean)</code></td><td>-</td><td>-</td><td>Control whether the current column is displayed based on the business status.</td></tr></tbody></table><h3 id="editcomponenttype" tabindex="-1"><a class="header-anchor" href="#editcomponenttype" aria-hidden="true">#</a> EditComponentType</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ComponentType</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">&quot;Input&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputNumber&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Select&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;ApiSelect&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Checkbox&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Switch&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;DatePicker&quot;</span> <span class="token comment">// v2.5.0 以上</span>
  <span class="token operator">|</span> <span class="token string">&quot;TimePicker&quot;</span><span class="token punctuation">;</span> <span class="token comment">// v2.5.0 以上</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="cellformat" tabindex="-1"><a class="header-anchor" href="#cellformat" aria-hidden="true">#</a> CellFormat</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">CellFormat</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token builtin">string</span>
  <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>text<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> record<span class="token operator">:</span> Recordable<span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">)</span>
  <span class="token operator">|</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">any</span><span class="token operator">&gt;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2>`,6),w={class:"hint-container tip"},q=s("p",{class:"hint-container-title"},"Reminder",-1),T={href:"https://2x.antdv.com/components/table-cn/#API",target:"_blank",rel:"noopener noreferrer"},x=t(`<table><thead><tr><th>Event</th><th>Callback Parameters</th><th>Description</th></tr></thead><tbody><tr><td>fetch-success</td><td><code>Function({items,total})</code></td><td>Triggered after the interface request is successful.</td></tr><tr><td>fetch-error</td><td><code>Function(error)</code></td><td>Error information.</td></tr><tr><td>selection-change</td><td><code>Function({keys，rows})</code></td><td>Triggered when a row is selected.</td></tr><tr><td>row-click</td><td><code>Function(record, index, event)</code></td><td>Triggered when a row is clicked.</td></tr><tr><td>row-dbClick</td><td><code>Function(record, index, event)</code></td><td>Triggered when a row is double-clicked.</td></tr><tr><td>row-contextmenu</td><td><code>Function(record, index, event)</code></td><td>Triggered when the right mouse button is clicked on a row.</td></tr><tr><td>row-mouseenter</td><td><code>Function(record, index, event)</code></td><td>Triggered when the mouse enters a row.</td></tr><tr><td>row-mouseleave</td><td><code>Function(record, index, event)</code></td><td>Triggered when the mouse leaves a row.</td></tr><tr><td>edit-end</td><td><code>Function({record, index, key, value})</code></td><td>Triggered when cell editing is completed.</td></tr><tr><td>edit-cancel</td><td><code>Function({record, index, key, value})</code></td><td>Triggered when cell editing is cancelled.</td></tr><tr><td>edit-row-end</td><td><code>Function()</code></td><td>Triggered when row editing is completed.</td></tr><tr><td>edit-change</td><td><code>Function({column,value,record})</code></td><td>Triggered when the value of the editing component in a cell changes.</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">Explanation of \`edit-change\`</p><p>Starting from version <code>2.4.2</code>, for the <code>edit-change</code> event, the <code>editValueRefs</code> property in the <code>record</code> object contains the <code>ref</code> objects of all editing components (if any) in the current row. This can be used to handle the linkage of editing components in the same row. See the example below:</p></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">onEditChange</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> column<span class="token punctuation">,</span> record <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// When the unit price or quantity in the same row changes, update the total amount (all three values are values of editing components in the current row)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>column<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">&quot;qty&quot;</span> <span class="token operator">||</span> column<span class="token punctuation">.</span>dataIndex <span class="token operator">===</span> <span class="token string">&quot;price&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">editValueRefs</span><span class="token operator">:</span> <span class="token punctuation">{</span> total<span class="token punctuation">,</span> qty<span class="token punctuation">,</span> price <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span> <span class="token operator">=</span> record<span class="token punctuation">;</span>
    total<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token function">unref</span><span class="token punctuation">(</span>qty<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">unref</span><span class="token punctuation">(</span>price<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2>`,4),C={class:"hint-container tip"},_=s("p",{class:"hint-container-title"},"Reminder",-1),R={href:"https://2x.antdv.com/components/table-cn/#API",target:"_blank",rel:"noopener noreferrer"},S=t('<table><thead><tr><th>Name</th><th>Description</th><th>Version</th></tr></thead><tbody><tr><td>tableTitle</td><td>Top left area of the table.</td><td></td></tr><tr><td>toolbar</td><td>Top right area of the table.</td><td></td></tr><tr><td>expandedRowRender</td><td>Expandable row area.</td><td></td></tr><tr><td>headerTop</td><td>Top area of the table title.</td><td>2.6.1</td></tr></tbody></table><h2 id="form-slots" tabindex="-1"><a class="header-anchor" href="#form-slots" aria-hidden="true">#</a> Form-Slots</h2><p>When the form is enabled, slots with the prefix <code>form-xxxx</code> will be treated as slots for the form.</p>',3),D=s("code",null,"xxxx",-1),P=t(`<p>For example:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>form-submitBefore
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="built-in-components-for-internal-use-only" tabindex="-1"><a class="header-anchor" href="#built-in-components-for-internal-use-only" aria-hidden="true">#</a> Built-in Components (for internal use only)</h2><h3 id="tableaction" tabindex="-1"><a class="header-anchor" href="#tableaction" aria-hidden="true">#</a> TableAction</h3><p>Used to render the operation column on the right side of the table.</p><h4 id="props-1" tabindex="-1"><a class="header-anchor" href="#props-1" aria-hidden="true">#</a> Props</h4><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th><th>Version</th></tr></thead><tbody><tr><td>actions</td><td><code>ActionItem[]</code></td><td>-</td><td>-</td><td>Button list in the operation column on the right.</td><td></td></tr><tr><td>dropDownActions</td><td><code>ActionItem[]</code></td><td>-</td><td>-</td><td>Dropdown button list in the operation column on the right.</td><td></td></tr><tr><td>stopButtonPropagation</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>Whether to prevent the click event of the operation button from bubbling.</td><td>2.5.0</td></tr></tbody></table><p><strong>ActionItem</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ActionItem</span> <span class="token punctuation">{</span>
  <span class="token comment">// Button text.</span>
  label<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// Whether the button is disabled.</span>
  disabled<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// Button color.</span>
  color<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;error&quot;</span> <span class="token operator">|</span> <span class="token string">&quot;warning&quot;</span><span class="token punctuation">;</span>
  <span class="token comment">// Button type.</span>
  type<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// Button component props.</span>
  props<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token comment">// Button icon.</span>
  icon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// Popconfirm.</span>
  popConfirm<span class="token operator">?</span><span class="token operator">:</span> PopConfirm<span class="token punctuation">;</span>
  <span class="token comment">// Whether to show the divider line, v2.0.0+.</span>
  divider<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// Control whether the column is displayed based on the permission code, v2.4.0+.</span>
  auth<span class="token operator">?</span><span class="token operator">:</span> RoleEnum <span class="token operator">|</span> RoleEnum<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token comment">// Control whether the column is displayed based on the business status, v2.4.0+.</span>
  ifShow<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>action<span class="token operator">:</span> ActionItem<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// Click callback.</span>
  onClick<span class="token operator">?</span><span class="token operator">:</span> Fn<span class="token punctuation">;</span>
  <span class="token comment">// Tooltip configuration, supported in versions 2.5.3 and above. Can be configured as a string or a complete TooltipProps object.</span>
  tooltip<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token operator">|</span> TooltipProps<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),B=s("code",null,"TooltipProps",-1),I={href:"https://2x.antdv.com/components/tooltip-cn#API",target:"_blank",rel:"noopener noreferrer"},F=t(`<p><strong>PopConfirm</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">PopConfirm</span> <span class="token punctuation">{</span>
  title<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  okText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  cancelText<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  confirm<span class="token operator">:</span> Fn<span class="token punctuation">;</span>
  cancel<span class="token operator">?</span><span class="token operator">:</span> Fn<span class="token punctuation">;</span>
  icon<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tableimg" tabindex="-1"><a class="header-anchor" href="#tableimg" aria-hidden="true">#</a> TableImg</h3><p>Used to render images in table cells, and supports image preview.</p><h4 id="props-2" tabindex="-1"><a class="header-anchor" href="#props-2" aria-hidden="true">#</a> Props</h4><table><thead><tr><th>Property</th><th>Type</th><th>Default</th><th>Options</th><th>Description</th><th>Version</th></tr></thead><tbody><tr><td>imgList</td><td><code>string[]</code></td><td>-</td><td>-</td><td>List of image addresses.</td><td></td></tr><tr><td>size</td><td><code>number</code></td><td>-</td><td>-</td><td>Image size.</td><td></td></tr><tr><td>simpleShow</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>Simple display mode (only the first image is displayed).</td><td>2.5.0</td></tr><tr><td>showBadge</td><td><code>boolean</code></td><td><code>true</code></td><td><code>true/false</code></td><td>Whether to show the count badge in simple mode.</td><td>2.5.0</td></tr><tr><td>margin</td><td><code>number</code></td><td>4</td><td>-</td><td>Image spacing in normal mode.</td><td>2.5.0</td></tr><tr><td>srcPrefix</td><td><code>string</code></td><td>-</td><td>-</td><td>Content to be inserted before each image src.</td><td>2.5.0</td></tr></tbody></table><h2 id="global-configuration" tabindex="-1"><a class="header-anchor" href="#global-configuration" aria-hidden="true">#</a> Global Configuration</h2>`,7),A={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/settings/componentSetting.ts",target:"_blank",rel:"noopener noreferrer"};function W(E,L){const e=o("ExternalLinkIcon"),p=o("RouterLink");return l(),i("div",null,[u,s("div",k,[m,s("ul",null,[s("li",null,[n("In addition to the following parameters, all props in the official documentation are also supported. For details, please refer to "),s("a",v,[n("antv table"),a(e)]),n(".")]),b])]),h,s("p",null,[n("In addition to the "),s("a",g,[n("official "),f,n(" configuration"),a(e)]),n(", the following parameters are added:")]),y,s("div",w,[q,s("p",null,[n("In addition to the following events, the events in the official documentation are also supported. For details, please refer to "),s("a",T,[n("antv table"),a(e)]),n(".")])]),x,s("div",C,[_,s("p",null,[n("In addition to the following parameters, the slots in the official documentation are also supported. For details, please refer to "),s("a",R,[n("antv table"),a(e)]),n(".")])]),S,s("p",null,[D,n(" is the slot of the form component. For details, please refer to the "),a(p,{to:"/guide/components/Common/form.html#Slots"},{default:d(()=>[n("form component documentation")]),_:1}),n(".")]),P,s("p",null,[n("For more information on "),B,n(", please refer to the "),s("a",I,[n("tooltip documentation"),a(e)]),n(".")]),F,s("p",null,[n("The global parameters can be configured in "),s("a",A,[n("componentsSettings"),a(e)]),n(" to unify the style of the entire project. They can be overridden by passing props.")])])}const O=c(r,[["render",W],["__file","table.html.vue"]]);export{O as default};
