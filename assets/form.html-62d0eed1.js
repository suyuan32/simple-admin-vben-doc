import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as l,a as n,d as s,b as t,e as p}from"./app-36d30fb3.js";const i={},u=p(`<h1 id="form-表单组件" tabindex="-1"><a class="header-anchor" href="#form-表单组件" aria-hidden="true">#</a> Form 表单组件</h1><p>对 <code>antv</code> 的 form 组件进行封装，扩展一些常用的功能</p><blockquote><p>如果文档内没有，可以尝试在在线示例内寻找</p></blockquote><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h3 id="useform-方式" tabindex="-1"><a class="header-anchor" href="#useform-方式" aria-hidden="true">#</a> useForm 方式</h3><p>下面是一个使用简单表单的示例，只有一个输入框</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span>
      <span class="token attr-name">:labelWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:schemas</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemas<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:actionColOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ span: 24 }<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> FormSchema <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Form&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/hooks/web/useMessage&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">schemas</span><span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">defaultValue</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">componentProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&quot;自定义placeholder&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> createMessage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      schemas<span class="token punctuation">,</span>
      <span class="token function-variable function">handleSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">values</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        createMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;click search,values:&quot;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="template-方式" tabindex="-1"><a class="header-anchor" href="#template-方式" aria-hidden="true">#</a> template 方式</h3><p>所有可调用函数见下方 <code>Methods</code> 说明</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span>
      <span class="token attr-name">:schemas</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>schemas<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>formElRef<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:labelWidth</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:actionColOptions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ span: 24 }<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span>
  BasicForm<span class="token punctuation">,</span>
  FormSchema<span class="token punctuation">,</span>
  FormActionType<span class="token punctuation">,</span>
  FormProps<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Form&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">schemas</span><span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> formElRef <span class="token operator">=</span> ref<span class="token operator">&lt;</span>Nullable<span class="token operator">&lt;</span>FormActionType<span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      formElRef<span class="token punctuation">,</span>
      schemas<span class="token punctuation">,</span>
      <span class="token function">setProps</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">props</span><span class="token operator">:</span> FormProps</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> formEl <span class="token operator">=</span> formElRef<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>formEl<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
        formEl<span class="token punctuation">.</span><span class="token function">setProps</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="useform" tabindex="-1"><a class="header-anchor" href="#useform" aria-hidden="true">#</a> useForm</h2><p>form 组件还提供了 <code>useForm</code>，方便调用函数内部方法</p><h3 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h3><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> FormSchema<span class="token punctuation">,</span> useForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Form/index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/hooks/web/useMessage&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">schemas</span><span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">componentProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&quot;自定义placeholder&quot;</span><span class="token punctuation">,</span>
      <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">e</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> createMessage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> <span class="token punctuation">{</span> setProps <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">labelWidth</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
      schemas<span class="token punctuation">,</span>
      <span class="token literal-property property">actionColOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      register<span class="token punctuation">,</span>
      schemas<span class="token punctuation">,</span>
      <span class="token function-variable function">handleSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">values</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        createMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;click search,values:&quot;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      setProps<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参数介绍" tabindex="-1"><a class="header-anchor" href="#参数介绍" aria-hidden="true">#</a> 参数介绍</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> methods<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>参数 props 内的值可以是 computed 或者 ref 类型</strong></p><p><strong>register</strong></p><p>register 用于注册 <code>useForm</code>，如果需要使用 <code>useForm</code> 提供的 api，必须将 register 传入组件的 <code>onRegister</code></p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> useForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Form&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">handleSubmit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;submit&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      register<span class="token punctuation">,</span>
      handleSubmit<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Methods</code>见下方说明</p><h3 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h3><p><strong>getFieldsValue</strong></p><p>类型: <code>() =&gt; Recordable;</code></p><p>说明: 获取表单值</p><p><strong>setFieldsValue</strong></p><p>类型: <code>&lt;T&gt;(values: T) =&gt; Promise&lt;void&gt;</code></p><p>说明: 设置表单字段值</p><p><strong>resetFields</strong></p><p>类型: <code>()=&gt; Promise&lt;any&gt;</code></p><p>说明: 重置表单值</p><p><strong>validateFields</strong></p><p>类型: <code>(nameList?: NamePath[]) =&gt; Promise&lt;any&gt;</code></p><p>说明: 校验指定表单项</p><p><strong>validate</strong></p><p>类型: <code>(nameList?: NamePath[]) =&gt; Promise&lt;any&gt;</code></p><p>说明: 校验整个表单</p><p><strong>submit</strong></p><p>类型: <code>() =&gt; Promise&lt;void&gt;</code></p><p>说明: 提交表单</p><p><strong>scrollToField</strong></p><p>类型: <code>(name: NamePath, options?: ScrollOptions) =&gt; Promise&lt;void&gt;</code></p><p>说明: 滚动到对应字段位置</p><p><strong>clearValidate</strong></p><p>类型: <code>(name?: string | string[]) =&gt; Promise&lt;void&gt;</code></p><p>说明: 清空校验</p><p><strong>setProps</strong></p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>设置表单的 props 可以直接在标签上传递，也可以使用 setProps，或者初始化直接写 useForm(props)</p></div><p>类型: <code>(formProps: Partial&lt;FormProps&gt;) =&gt; Promise&lt;void&gt;</code></p><p>说明: 设置表单 Props</p><p><strong>removeSchemaByFiled</strong></p><p>类型: <code>(field: string | string[]) =&gt; Promise&lt;void&gt;</code></p><p>说明: 根据 field 删除 Schema</p><p><strong>appendSchemaByField</strong></p><p>类型: <code>( schema: FormSchema, prefixField: string | undefined, first?: boolean | undefined ) =&gt; Promise&lt;void&gt;</code></p><p>说明: 插入到指定 filed 后面，如果没传指定 field，则插入到最后,当 first = true 时插入到第一个位置</p><p><strong>updateSchema</strong></p><p>类型: <code>(data: Partial&lt;FormSchema&gt; | Partial&lt;FormSchema&gt;[]) =&gt; Promise&lt;void&gt;</code></p><p>说明: 更新表单的 schema, 只更新函数所传的参数</p><p>e.g</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">updateSchema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> field<span class="token operator">:</span> <span class="token string">&quot;filed&quot;</span><span class="token punctuation">,</span> componentProps<span class="token operator">:</span> <span class="token punctuation">{</span> disabled<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">updateSchema</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">{</span> field<span class="token operator">:</span> <span class="token string">&quot;filed&quot;</span><span class="token punctuation">,</span> componentProps<span class="token operator">:</span> <span class="token punctuation">{</span> disabled<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span> field<span class="token operator">:</span> <span class="token string">&quot;filed1&quot;</span><span class="token punctuation">,</span> componentProps<span class="token operator">:</span> <span class="token punctuation">{</span> disabled<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,62),r={class:"hint-container tip"},d=n("p",{class:"hint-container-title"},"温馨提醒",-1),k={href:"https://2x.antdv.com/components/form-cn/#Form",target:"_blank",rel:"noopener noreferrer"},v=p('<table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th><th>版本</th></tr></thead><tbody><tr><td>schemas</td><td><code>Schema[]</code></td><td>-</td><td>-</td><td>表单配置，见下方 <code>FormSchema</code> 配置</td><td></td></tr><tr><td>submitOnReset</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>重置时是否提交表单</td><td></td></tr><tr><td>labelCol</td><td><code>Partial&lt;ColEx&gt;</code></td><td>-</td><td>-</td><td>整个表单通用 LabelCol 配置</td><td></td></tr><tr><td>wrapperCol</td><td><code>Partial&lt;ColEx&gt;</code></td><td>-</td><td>-</td><td>整个表单通用 wrapperCol 配置</td><td></td></tr><tr><td>baseColProps</td><td><code>Partial&lt;ColEx&gt;</code></td><td>-</td><td>-</td><td>配置所有选子项的 ColProps，不需要逐个配置，子项也可单独配置优先与全局</td><td></td></tr><tr><td>baseRowStyle</td><td><code>object</code></td><td>-</td><td>-</td><td>配置所有 Row 的 style 样式</td><td></td></tr><tr><td>labelWidth</td><td><code>number , string</code></td><td>-</td><td>-</td><td>扩展 form 组件，增加 label 宽度，表单内所有组件适用，可以单独在某个项覆盖或者禁用</td><td></td></tr><tr><td>labelAlign</td><td><code>string</code></td><td>-</td><td><code>left</code>,<code>right</code></td><td>label 布局</td><td></td></tr><tr><td>mergeDynamicData</td><td><code>object</code></td><td>-</td><td>-</td><td>额外传递到子组件的参数 values</td><td></td></tr><tr><td>autoFocusFirstItem</td><td><code>boolean</code></td><td><code>false</code></td><td>-</td><td>是否聚焦第一个输入框，只在第一个表单项为 input 的时候作用</td><td></td></tr><tr><td>compact</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>紧凑类型表单，减少 margin-bottom</td><td></td></tr><tr><td>size</td><td><code>string</code></td><td><code>default</code></td><td><code>&#39;default&#39; , &#39;small&#39; , &#39;large&#39;</code></td><td>向表单内所有组件传递 size 参数,自定义组件需自行实现 size 接收</td><td></td></tr><tr><td>disabled</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>向表单内所有组件传递 disabled 属性，自定义组件需自行实现 disabled 接收</td><td></td></tr><tr><td>autoSetPlaceHolder</td><td><code>boolean</code></td><td><code>true</code></td><td><code> true/false</code></td><td>自动设置表单内组件的 placeholder，自定义组件需自行实现</td><td></td></tr><tr><td>autoSubmitOnEnter</td><td><code>boolean</code></td><td><code>false</code></td><td><code> true/false</code></td><td>在 input 中输入时按回车自动提交</td><td>2.4.0</td></tr><tr><td>rulesMessageJoinLabel</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>如果表单项有校验，会自动生成校验信息，该参数控制是否将字段中文名字拼接到自动生成的信息后方</td><td></td></tr><tr><td>showAdvancedButton</td><td><code>boolean</code></td><td><code>false</code></td><td><code>true/false</code></td><td>是否显示收起展开按钮</td><td></td></tr><tr><td>emptySpan</td><td><code>number , Partial&lt;ColEx&gt;</code></td><td>0</td><td>-</td><td>空白行格,可以是数值或者 col 对象 数</td><td></td></tr><tr><td>autoAdvancedLine</td><td><code>number</code></td><td>3</td><td>-</td><td>如果 showAdvancedButton 为 true，超过指定行数行默认折叠</td><td></td></tr><tr><td>alwaysShowLines</td><td><code>number</code></td><td>1</td><td>-</td><td>折叠时始终保持显示的行数</td><td>2.7.1</td></tr><tr><td>showActionButtonGroup</td><td><code>boolean</code></td><td><code>true</code></td><td><code>true/false</code></td><td>是否显示操作按钮(重置/提交)</td><td></td></tr><tr><td>actionColOptions</td><td><code>Partial&lt;ColEx&gt;</code></td><td>-</td><td>-</td><td>操作按钮外层 Col 组件配置，如果开启 showAdvancedButton，则不用设置，具体见下方 actionColOptions</td><td></td></tr><tr><td>showResetButton</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>是否显示重置按钮</td><td></td></tr><tr><td>resetButtonOptions</td><td><code>object</code></td><td></td><td>-</td><td>重置按钮配置见下方 ActionButtonOption</td><td></td></tr><tr><td>showSubmitButton</td><td><code>boolean</code></td><td><code>true</code></td><td>-</td><td>是否显示提交按钮</td><td></td></tr><tr><td>submitButtonOptions</td><td><code>object</code></td><td></td><td>-</td><td>确认按钮配置见下方 ActionButtonOption</td><td></td></tr><tr><td>resetFunc</td><td><code> () =&gt; Promise&lt;void&gt;</code></td><td></td><td>-</td><td>自定义重置按钮逻辑<code>() =&gt; Promise&lt;void&gt;;</code></td><td></td></tr><tr><td>submitFunc</td><td><code> () =&gt; Promise&lt;void&gt;</code></td><td></td><td>-</td><td>自定义提交按钮逻辑<code>() =&gt; Promise&lt;void&gt;;</code></td><td></td></tr><tr><td>fieldMapToTime</td><td><code>[string, [string, string], string?][]</code></td><td></td><td>-</td><td>用于将表单内时间区域的应设成 2 个字段,见下方说明</td><td></td></tr></tbody></table><h3 id="colex" tabindex="-1"><a class="header-anchor" href="#colex" aria-hidden="true">#</a> ColEx</h3>',2),m={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/components/Form/src/types/index.ts",target:"_blank",rel:"noopener noreferrer"},b=n("h3",{id:"actionbuttonoption",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#actionbuttonoption","aria-hidden":"true"},"#"),s(" ActionButtonOption")],-1),g={href:"https://github.com/vbenjs/vue-vben-admin/tree/main/src/components/Button/types.ts",target:"_blank",rel:"noopener noreferrer"},h=p(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ButtonProps</span> <span class="token keyword">extends</span> <span class="token class-name">BasicButtonProps</span> <span class="token punctuation">{</span>
  text<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fieldmaptotime" tabindex="-1"><a class="header-anchor" href="#fieldmaptotime" aria-hidden="true">#</a> fieldMapToTime</h3><p>将表单内时间区域的值映射成 2 个字段</p><p>如果表单内有时间区间组件，获取到的值是一个数组，但是往往我们传递到后台需要是 2 个字段</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  fieldMapToTime<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// data为时间组件在表单内的字段，startTime，endTime为转化后的开始时间与结束时间</span>
    <span class="token comment">// &#39;YYYY-MM-DD&#39;为时间格式，参考moment</span>
    <span class="token punctuation">[</span><span class="token string">&#39;datetime&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;startTime&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;endTime&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;YYYY-MM-DD&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token comment">// 支持多个字段</span>
    <span class="token punctuation">[</span><span class="token string">&#39;datetime1&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;startTime1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;endTime1&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;YYYY-MM-DD HH:mm:ss&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// fieldMapToTime没写的时候表单获取到的值</span>
<span class="token punctuation">{</span>
  datetime<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
<span class="token comment">//  [&#39;datetime&#39;, [&#39;startTime&#39;, &#39;endTime&#39;], &#39;YYYY-MM-DD&#39;],之后</span>
<span class="token punctuation">{</span>
    datetime<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    startTime<span class="token operator">:</span> <span class="token string">&#39;2020-08-12&#39;</span><span class="token punctuation">,</span>
    endTime<span class="token operator">:</span> <span class="token string">&#39;2020-08-15&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="formschema" tabindex="-1"><a class="header-anchor" href="#formschema" aria-hidden="true">#</a> FormSchema</h3><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>可选值</th><th>说明</th></tr></thead><tbody><tr><td>field</td><td><code>string</code></td><td>-</td><td>-</td><td>字段名</td></tr><tr><td>label</td><td><code>string</code></td><td>-</td><td>-</td><td>标签名</td></tr><tr><td>subLabel</td><td><code>string</code></td><td>-</td><td>-</td><td>二级标签名灰色</td></tr><tr><td>suffix</td><td><code>string , number , ((values: RenderCallbackParams) =&gt; string / number);</code></td><td>-</td><td>-</td><td>组件后面的内容</td></tr><tr><td>changeEvent</td><td><code>string</code></td><td>-</td><td>-</td><td>表单更新事件名称</td></tr><tr><td>helpMessage</td><td><code>string , string[]</code></td><td>-</td><td>-</td><td>标签名右侧温馨提示</td></tr><tr><td>helpComponentProps</td><td><code>HelpComponentProps</code></td><td>-</td><td>-</td><td>标签名右侧温馨提示组件 props,见下方 HelpComponentProps</td></tr><tr><td>labelWidth</td><td><code>string , number</code></td><td>-</td><td>-</td><td>覆盖统一设置的 labelWidth</td></tr><tr><td>disabledLabelWidth</td><td><code>boolean</code></td><td>false</td><td>true/false</td><td>禁用 form 全局设置的 labelWidth,自己手动设置 labelCol 和 wrapperCol</td></tr><tr><td>component</td><td><code>string</code></td><td>-</td><td>-</td><td>组件类型，见下方 ComponentType</td></tr><tr><td>componentProps</td><td><code>any,()=&gt;{}</code></td><td>-</td><td>-</td><td>所渲染的组件的 props</td></tr><tr><td>rules</td><td><code>ValidationRule[]</code></td><td>-</td><td>-</td><td>校验规则,见下方 ValidationRule</td></tr><tr><td>required</td><td><code>boolean</code></td><td>-</td><td>-</td><td>简化 rules 配置，为 true 则转化成 [{required:true}]。<code>2.4.0</code>之前的版本只支持 string 类型的值</td></tr><tr><td>rulesMessageJoinLabel</td><td><code>boolean</code></td><td>false</td><td>-</td><td>校验信息是否加入 label</td></tr><tr><td>itemProps</td><td><code>any</code></td><td>-</td><td>-</td><td>参考下方 FormItem</td></tr><tr><td>colProps</td><td><code>ColEx</code></td><td>-</td><td>-</td><td>参考上方 actionColOptions</td></tr><tr><td>defaultValue</td><td><code>object</code></td><td>-</td><td>-</td><td>所渲渲染组件的初始值</td></tr><tr><td>render</td><td><code>(renderCallbackParams: RenderCallbackParams) =&gt; VNode / VNode[] / string</code></td><td>-</td><td>-</td><td>自定义渲染组件</td></tr><tr><td>renderColContent</td><td><code>(renderCallbackParams: RenderCallbackParams) =&gt; VNode / VNode[] / string</code></td><td>-</td><td>-</td><td>自定义渲染组件（需要自行包含 formItem）</td></tr><tr><td>renderComponentContent</td><td><code>(renderCallbackParams: RenderCallbackParams) =&gt; any / string</code></td><td>-</td><td>-</td><td>自定义渲染组内部的 slot</td></tr><tr><td>slot</td><td><code>string</code></td><td>-</td><td>-</td><td>自定义 slot，渲染组件</td></tr><tr><td>colSlot</td><td><code>string</code></td><td>-</td><td>-</td><td>自定义 slot，渲染组件 （需要自行包含 formItem）</td></tr><tr><td>show</td><td><code> boolean / ((renderCallbackParams: RenderCallbackParams) =&gt; boolean)</code></td><td>-</td><td>-</td><td>动态判断当前组件是否显示，css 控制，不会删除 dom</td></tr><tr><td>ifShow</td><td><code> boolean / ((renderCallbackParams: RenderCallbackParams) =&gt; boolean)</code></td><td>-</td><td>-</td><td>动态判断当前组件是否显示，js 控制，会删除 dom</td></tr><tr><td>dynamicDisabled</td><td><code>boolean / ((renderCallbackParams: RenderCallbackParams) =&gt; boolean) </code></td><td>-</td><td>-</td><td>动态判断当前组件是否禁用</td></tr><tr><td>dynamicRules</td><td><code>boolean / ((renderCallbackParams: RenderCallbackParams) =&gt; boolean)</code></td><td>-</td><td>-</td><td>动态判返当前组件你校验规则</td></tr></tbody></table><p><strong>RenderCallbackParams</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">RenderCallbackParams</span> <span class="token punctuation">{</span>
  schema<span class="token operator">:</span> FormSchema<span class="token punctuation">;</span>
  values<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  model<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  field<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>componentProps</strong></p><ul><li><p>当值为对象类型时,该对象将作为<code>component</code>所对应组件的的 props 传入组件</p></li><li><p>当值为一个函数时候</p></li></ul><p>参数有 4 个</p><p><code>schema</code>: 表单的整个 schemas</p><p><code>formActionType</code>: 操作表单的函数。与 useForm 返回的操作函数一致</p><p><code>formModel</code>: 表单的双向绑定对象，这个值是响应式的。所以可以方便处理很多操作</p><p><code>tableAction</code>: 操作表格的函数，与 useTable 返回的操作函数一致。注意该参数只在表格内开启搜索表单的时候有值，其余情况为<code>null</code>,</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token punctuation">{</span>
  <span class="token comment">// 简单例子，值改变的时候操作表格或者修改表单内其他元素的值</span>
  component<span class="token operator">:</span><span class="token string">&#39;Input&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">componentProps</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">{</span> schema<span class="token punctuation">,</span> tableAction<span class="token punctuation">,</span> formActionType<span class="token punctuation">,</span> formModel <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token comment">// xxxx props</span>
      <span class="token function-variable function">onChange</span><span class="token operator">:</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
        <span class="token keyword">const</span> <span class="token punctuation">{</span>reload<span class="token punctuation">}</span><span class="token operator">=</span>tableAction
        <span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token comment">// or</span>
        formModel<span class="token punctuation">.</span>xxx<span class="token operator">=</span><span class="token string">&#39;123&#39;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>HelpComponentProps</strong></p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">HelpComponentProps</span> <span class="token punctuation">{</span>
  maxWidth<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// 是否显示序号</span>
  showIndex<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// 文本列表</span>
  text<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
  <span class="token comment">// 颜色</span>
  color<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  <span class="token comment">// 字体大小</span>
  fontSize<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  icon<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
  absolute<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">;</span>
  <span class="token comment">// 定位</span>
  position<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>ComponentType</strong></p><p>schema 内组件的可选类型</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ComponentType</span> <span class="token operator">=</span>
  <span class="token operator">|</span> <span class="token string">&quot;Input&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputGroup&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputPassword&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputSearch&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputTextArea&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputNumber&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;InputCountDown&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Select&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;ApiSelect&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;TreeSelect&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;RadioButtonGroup&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;RadioGroup&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Checkbox&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;CheckboxGroup&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;AutoComplete&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Cascader&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;DatePicker&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;MonthPicker&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;RangePicker&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;WeekPicker&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;TimePicker&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Switch&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;StrengthMeter&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Upload&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;IconPicker&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Render&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Slider&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Rate&quot;</span>
  <span class="token operator">|</span> <span class="token string">&quot;Divider&quot;</span><span class="token punctuation">;</span> <span class="token comment">// v2.7.2新增</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="divider-schema-说明" tabindex="-1"><a class="header-anchor" href="#divider-schema-说明" aria-hidden="true">#</a> Divider schema 说明</h3><p><code>Divider</code>类型用于在<code>schemas</code>中占位，将会渲染成一个分割线（始终占一整行的版面），可以用于较长表单的版面分隔。请只将 Divider 类型的 schema 当作一个分割线，而不是一个常规的表单字段。</p><ul><li><strong><code>Divider</code>仅在<code>showAdvancedButton</code>为 false 时才会显示</strong>（也就是说如果启用了表单收起和展开功能，<code>Divider</code>将不会显示）</li><li><code>Divider</code> 使用<code>schema</code>中的<code>label</code>以及<code>helpMessage</code>来渲染分割线中的提示内容</li><li><code>Divider</code> 可以使用<code>componentProps</code>来设置除<code>type</code>之外的 props</li><li><code>Divider</code> 不会渲染<code>AFormItem</code>，因此<code>schema</code>中除<code>label</code>、<code>componentProps</code>、<code>helpMessage</code>、<code>helpComponentProps</code>以外的属性不会被用到</li></ul><h2 id="自行添加需要的组件类型" tabindex="-1"><a class="header-anchor" href="#自行添加需要的组件类型" aria-hidden="true">#</a> 自行添加需要的组件类型</h2><p>在 <code>src/components/Form/src/componentMap.ts</code> 内，添加需要的组件，并在上方 <strong>ComponentType</strong> 添加相应的类型 key</p><h3 id="方式-1" tabindex="-1"><a class="header-anchor" href="#方式-1" aria-hidden="true">#</a> 方式 1</h3><p>这种写法适用与适用频率较高的组件</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code>componentMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;componentName&quot;</span><span class="token punctuation">,</span> 组件<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ComponentType</span>
<span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">ComponentType</span> <span class="token operator">=</span> xxxx <span class="token operator">|</span> <span class="token string">&quot;componentName&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="方式-2" tabindex="-1"><a class="header-anchor" href="#方式-2" aria-hidden="true">#</a> 方式 2</h3><p>使用 <strong>useComponentRegister</strong> 进行注册</p><p>这种写法只能在当前页使用，页面销毁之后会从 componentMap 删除相应的组件</p><div class="language-tsx line-numbers-mode" data-ext="tsx"><pre class="language-tsx"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> useComponentRegister <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/form/index&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span> StrengthMeter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/strength-meter/index&quot;</span><span class="token punctuation">;</span>

<span class="token function">useComponentRegister</span><span class="token punctuation">(</span><span class="token string">&quot;StrengthMeter&quot;</span><span class="token punctuation">,</span> StrengthMeter<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>方式 2 出现的原因是为了减少打包体积，如果某个组件体积很大，用方式 1 的话可能会使首屏体积增加</p></div><h3 id="render" tabindex="-1"><a class="header-anchor" href="#render" aria-hidden="true">#</a> render</h3><p>自定义渲染内容</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@submit</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleSubmit<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> h <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> FormSchema<span class="token punctuation">,</span> useForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Form/index&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useMessage <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/hooks/web/useMessage&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> Input <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;ant-design-vue&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">schemas</span><span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> model<span class="token punctuation">,</span> field <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">h</span><span class="token punctuation">(</span>Input<span class="token punctuation">,</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">placeholder</span><span class="token operator">:</span> <span class="token string">&quot;请输入&quot;</span><span class="token punctuation">,</span>
        <span class="token literal-property property">value</span><span class="token operator">:</span> model<span class="token punctuation">[</span>field<span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token function-variable function">onChange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          model<span class="token punctuation">[</span>field<span class="token punctuation">]</span> <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field2&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段2&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token function-variable function">renderComponentContent</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span>
        <span class="token function-variable function">suffix</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token string">&quot;suffix&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> createMessage <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">useMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> <span class="token punctuation">{</span> setProps <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">labelWidth</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
      schemas<span class="token punctuation">,</span>
      <span class="token literal-property property">actionColOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      register<span class="token punctuation">,</span>
      schemas<span class="token punctuation">,</span>
      <span class="token function-variable function">handleSubmit</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">values</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        createMessage<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;click search,values:&quot;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      setProps<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slot" tabindex="-1"><a class="header-anchor" href="#slot" aria-hidden="true">#</a> slot</h3><p>自定义渲染内容</p>`,40),y={class:"hint-container tip"},f=n("p",{class:"hint-container-title"},"提示",-1),q={href:"https://2x.antdv.com/components/form-cn#API",target:"_blank",rel:"noopener noreferrer"},w=p(`<div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">#customSlot</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>{ model, field }<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a-input</span> <span class="token attr-name"><span class="token namespace">v-model:</span>value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>model[field]<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>BasicForm</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> useForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@/components/Form/index&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;FormDemo&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">labelWidth</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span>
      <span class="token literal-property property">actionColOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token literal-property property">schemas</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
          <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;ID&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
          <span class="token literal-property property">show</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      register<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="ifshow-show-dynamicdisabled" tabindex="-1"><a class="header-anchor" href="#ifshow-show-dynamicdisabled" aria-hidden="true">#</a> ifShow/show/dynamicDisabled</h3><p>自定义显示/禁用</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>m-4<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicForm</span> <span class="token attr-name">@register</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>register<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicForm<span class="token punctuation">,</span> FormSchema<span class="token punctuation">,</span> useForm <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;/@/components/Form/index&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">schemas</span><span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段1&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">show</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> values <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>values<span class="token punctuation">.</span>field5<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field2&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段2&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">ifShow</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> values <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>values<span class="token punctuation">.</span>field6<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field3&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;DatePicker&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段3&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">dynamicDisabled</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> values <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>values<span class="token punctuation">.</span>field7<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field4&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;DatePicker&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段4&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function-variable function">dynamicDisabled</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> values <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token operator">!</span><span class="token operator">!</span>values<span class="token punctuation">.</span>field7<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field5&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段5&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field6&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段6&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">field</span><span class="token operator">:</span> <span class="token string">&quot;field7&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token string">&quot;Input&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token string">&quot;字段7&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">colProps</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> BasicForm <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>register<span class="token punctuation">,</span> <span class="token punctuation">{</span> setProps <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useForm</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">labelWidth</span><span class="token operator">:</span> <span class="token number">120</span><span class="token punctuation">,</span>
      schemas<span class="token punctuation">,</span>
      <span class="token literal-property property">actionColOptions</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">span</span><span class="token operator">:</span> <span class="token number">24</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      register<span class="token punctuation">,</span>
      schemas<span class="token punctuation">,</span>
      setProps<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr>`,5),x={href:"https://2x.antdv.com/components/form-cn/#%E6%A0%A1%E9%AA%8C%E8%A7%84%E5%88%99",target:"_blank",rel:"noopener noreferrer"},P=p(`<h2 id="slots" tabindex="-1"><a class="header-anchor" href="#slots" aria-hidden="true">#</a> Slots</h2><table><thead><tr><th>名称</th><th>说明</th></tr></thead><tbody><tr><td>formFooter</td><td>表单底部区域</td></tr><tr><td>formHeader</td><td>表单顶部区域</td></tr><tr><td>resetBefore</td><td>重置按钮前</td></tr><tr><td>submitBefore</td><td>提交按钮前</td></tr><tr><td>advanceBefore</td><td>展开按钮前</td></tr><tr><td>advanceAfter</td><td>展开按钮后</td></tr></tbody></table><h2 id="apiselect" tabindex="-1"><a class="header-anchor" href="#apiselect" aria-hidden="true">#</a> ApiSelect</h2><p>远程下拉加载组件，该组件可以用于学习参考如何自定义组件集成到 Form 组件内，将自定义组件交由 Form 去管理</p><h3 id="usage-1" tabindex="-1"><a class="header-anchor" href="#usage-1" aria-hidden="true">#</a> Usage</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> schemas<span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    field<span class="token operator">:</span> <span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span>
    component<span class="token operator">:</span> <span class="token string">&quot;ApiSelect&quot;</span><span class="token punctuation">,</span>
    label<span class="token operator">:</span> <span class="token string">&quot;字段&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="props-1" tabindex="-1"><a class="header-anchor" href="#props-1" aria-hidden="true">#</a> Props</h3><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>numberToString</td><td><code>boolean</code></td><td><code>false</code></td><td>是否将<code>number</code>值转化为<code>string</code></td></tr><tr><td>api</td><td><code>()=&gt;Promise&lt;{ label: string; value: string; disabled?: boolean }[]&gt;</code></td><td>-</td><td>数据接口，接受一个 Promise 对象</td></tr><tr><td>params</td><td><code>object</code></td><td>-</td><td>接口参数。此属性改变时会自动重新加载接口数据</td></tr><tr><td>resultField</td><td><code>string</code></td><td>-</td><td>接口返回的字段，如果接口返回数组，可以不填。支持<code>x.x.x</code>格式</td></tr><tr><td>labelField</td><td><code>string</code></td><td><code>label</code></td><td>下拉数组项内<code>label</code>显示文本的字段，支持<code>x.x.x</code>格式</td></tr><tr><td>valueField</td><td><code>string</code></td><td><code>value</code></td><td>下拉数组项内<code>value</code>实际值的字段，支持<code>x.x.x</code>格式</td></tr><tr><td>immediate</td><td><code>boolean</code></td><td><code>true</code></td><td>是否立即请求接口，否则将在第一次点击时候触发请求</td></tr></tbody></table><h2 id="apitreeselect" tabindex="-1"><a class="header-anchor" href="#apitreeselect" aria-hidden="true">#</a> ApiTreeSelect</h2><p>远程下拉树加载组件，和<code>ApiSelect</code>类似，2.6.1 以上版本</p><h3 id="props-2" tabindex="-1"><a class="header-anchor" href="#props-2" aria-hidden="true">#</a> Props</h3><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>api</td><td><code>()=&gt;Promise&lt;{ label: string; value: string; children?: any[] }[]&gt;</code></td><td>-</td><td>数据接口，接受一个 Promise 对象</td></tr><tr><td>params</td><td><code>object</code></td><td>-</td><td>接口参数。此属性改变时会自动重新加载接口数据</td></tr><tr><td>resultField</td><td><code>string</code></td><td>-</td><td>接口返回的字段，如果接口返回数组，可以不填。支持<code>x.x.x</code>格式</td></tr><tr><td>immediate</td><td><code>boolean</code></td><td><code>true</code></td><td>是否立即请求接口。</td></tr></tbody></table><h2 id="radiobuttongroup" tabindex="-1"><a class="header-anchor" href="#radiobuttongroup" aria-hidden="true">#</a> RadioButtonGroup</h2><p>Radio Button 风格的选择按钮</p><h3 id="usage-2" tabindex="-1"><a class="header-anchor" href="#usage-2" aria-hidden="true">#</a> Usage</h3><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> schemas<span class="token operator">:</span> FormSchema<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span>
    field<span class="token operator">:</span> <span class="token string">&quot;field&quot;</span><span class="token punctuation">,</span>
    component<span class="token operator">:</span> <span class="token string">&quot;RadioButtonGroup&quot;</span><span class="token punctuation">,</span>
    label<span class="token operator">:</span> <span class="token string">&quot;字段&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="props-3" tabindex="-1"><a class="header-anchor" href="#props-3" aria-hidden="true">#</a> Props</h3><table><thead><tr><th>属性</th><th>类型</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>options</td><td><code>{ label: string; value: string; disabled?: boolean }[]</code></td><td>-</td><td>数据字段</td></tr></tbody></table>`,18);function F(C,S){const a=o("ExternalLinkIcon");return c(),l("div",null,[u,n("div",r,[d,n("p",null,[s("除以下参数外，官方文档内的 props 也都支持，具体可以参考 "),n("a",k,[s("antv form"),t(a)])])]),v,n("p",null,[s("见"),n("a",m,[s("src/components/Form/src/types/index.ts"),t(a)])]),b,n("p",null,[n("a",g,[s("BasicButtonProps"),t(a)])]),h,n("div",y,[f,n("p",null,[s("使用插槽自定义表单域时，请注意 antdv 有关 FormItem 的"),n("a",q,[s("相关说明"),t(a)]),s("。")])]),w,n("p",null,[s("见 "),n("a",x,[s("antv form"),t(a)])]),P])}const M=e(i,[["render",F],["__file","form.html.vue"]]);export{M as default};
