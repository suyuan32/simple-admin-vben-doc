import{_ as n,X as s,Y as a,a2 as t}from"./framework-13746272.js";const e={},o=t(`<p>Here is the translation of the selected text into English markdown text:</p><h1 id="common-doubt-explanation" tabindex="-1"><a class="header-anchor" href="#common-doubt-explanation" aria-hidden="true">#</a> Common Doubt Explanation</h1><p>This category mainly explains why some places are done this way and what the reasons are.</p><h2 id="project-alias" tabindex="-1"><a class="header-anchor" href="#project-alias" aria-hidden="true">#</a> Project alias</h2><p><code>/@/</code> is an alias configured in <code>vite</code></p><p><code>/@/settings</code> is equivalent to <code>src/settings</code></p><div class="hint-container tip"><p class="hint-container-title">Why is it /@/</p><p>Because the project was transitioned from <code>vite1.0</code>, <code>vite1.0</code> can only start with <code>/</code>, so some users who have switched from <code>webpack</code> may not be used to it.</p></div><h2 id="why-are-component-library-styles-not-imported-on-demand-locally-but-imported-in-production" tabindex="-1"><a class="header-anchor" href="#why-are-component-library-styles-not-imported-on-demand-locally-but-imported-in-production" aria-hidden="true">#</a> Why are component library styles not imported on demand locally, but imported in production</h2><p>In main.ts, you can see that antd.less is fully imported during local development, and vite-plugin-style-import has no effect locally.</p><p>The main reason for doing this is to speed up the refresh speed of local development. If on-demand import is also used in local development, you can see in the browser console that an average page has increased by about 100 http requests. If it is fully imported, only one request is added, so in order to reduce the number of requests, this kind of seed is used.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// src/main.ts</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">DEV</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;ant-design-vue/dist/antd.less&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// build/vite/plugin/styleImport</span>
<span class="token keyword">import</span> styleImport <span class="token keyword">from</span> <span class="token string">&quot;vite-plugin-style-import&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">configStyleImportPlugin</span><span class="token punctuation">(</span>isBuild<span class="token operator">:</span> <span class="token builtin">boolean</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isBuild<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> styleImportPlugin <span class="token operator">=</span> <span class="token function">styleImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    libs<span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        libraryName<span class="token operator">:</span> <span class="token string">&quot;ant-design-vue&quot;</span><span class="token punctuation">,</span>
        esModule<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token function-variable function">resolveStyle</span><span class="token operator">:</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">ant-design-vue/es/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/style/index</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> styleImportPlugin<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="why-put-moment-separately-into-datautil" tabindex="-1"><a class="header-anchor" href="#why-put-moment-separately-into-datautil" aria-hidden="true">#</a> Why put moment separately into dataUtil</h2><p>In <code>src/utils/dataUtil</code>, moment is used. Secondly, dateUtil is used for time operations on the page instead of directly <code>import moment from &#39;moment&#39;</code>.</p><p>This is mainly to facilitate the subsequent switch to <code>dayjs</code>, because the api is the same, so in subsequent switching, you only need to change the import in dataUtil instead of changing all.</p>`,14),p=[o];function i(c,l){return s(),a("div",null,p)}const r=n(e,[["render",i],["__file","doubt.html.vue"]]);export{r as default};
