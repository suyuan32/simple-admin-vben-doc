import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as l,c as r,a as n,d as s,b as a,e as p}from"./app-c7502ac8.js";const c={},i=n("h1",{id:"codeeditor",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#codeeditor","aria-hidden":"true"},"#"),s(" CodeEditor")],-1),u=n("p",null,"代码编辑器",-1),d={class:"hint-container info"},k=n("p",{class:"hint-container-title"},"相关信息",-1),_={href:"https://github.com/logue/vue-codemirror6",target:"_blank",rel:"noopener noreferrer"},h=p(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CodeMirror</span>
    <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> black</span><span class="token punctuation">&quot;</span></span></span>
    <span class="token attr-name">:lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>lang<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>value<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">basic</span>
    <span class="token attr-name">:dark</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>false<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineComponent<span class="token punctuation">,</span> ref <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vue&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> CodeMirror <span class="token keyword">from</span> <span class="token string">&quot;vue-codemirror6&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> json<span class="token punctuation">,</span> jsonParseLinter <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@codemirror/lang-json&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineComponent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">components</span><span class="token operator">:</span> <span class="token punctuation">{</span> CodeMirror <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> value <span class="token operator">=</span> ref<span class="token operator">&lt;</span>string<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> lang <span class="token operator">=</span> <span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> linter <span class="token operator">=</span> <span class="token function">jsonParseLinter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    value<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;{ hello: &quot;world&quot;}&#39;</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span> value<span class="token punctuation">,</span> lang<span class="token punctuation">,</span> linter <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性" tabindex="-1"><a class="header-anchor" href="#属性" aria-hidden="true">#</a> 属性</h2>`,3),m=n("thead",null,[n("tr",null,[n("th",null,"属性"),n("th",null,"类型"),n("th",null,"信息")])],-1),v=n("tr",null,[n("td",null,"model-value"),n("td",null,"string | Text"),n("td",null,[s("文本值。 (不是 "),n("code",null,"value"),s(")")])],-1),g=n("td",null,"basic",-1),b=n("td",null,"boolean",-1),f={href:"https://codemirror.net/docs/ref/#codemirror.basicSetup",target:"_blank",rel:"noopener noreferrer"},q=n("td",null,"minimal",-1),y=n("td",null,"boolean",-1),w={href:"https://codemirror.net/docs/ref/#codemirror.minimalSetup",target:"_blank",rel:"noopener noreferrer"},x=n("code",null,"basic",-1),C=n("tr",null,[n("td",null,"dark"),n("td",null,"boolean"),n("td",null,"切换到暗模式。")],-1),S=n("tr",null,[n("td",null,"placeholder"),n("td",null,"string"),n("td",null,"当为空时添加占位符文本（或 HTML DOM）。")],-1),j=n("td",null,"wrap",-1),E=n("td",null,"boolean",-1),L={href:"https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping",target:"_blank",rel:"noopener noreferrer"},M=n("tr",null,[n("td",null,"tab"),n("td",null,"boolean"),n("td",null,"启用制表符缩进。")],-1),V=n("td",null,"allow-multiple-selections",-1),N=n("td",null,"boolean",-1),T={href:"https://codemirror.net/docs/ref/#state.EditorState%5EallowMultipleSelections",target:"_blank",rel:"noopener noreferrer"},B=n("tr",null,[n("td",null,"tab-size"),n("td",null,"number"),n("td",null,"配置此状态中要使用的制表符大小。")],-1),O=n("tr",null,[n("td",null,"line-separator"),n("td",null,"string"),n("td",null,[s("设置换行符。 （默认为 "),n("code",null,"\\n"),s("。）")])],-1),P=n("td",null,"theme",-1),D=n("td",{"[selector:":"","string]:":"",StyleSpec:""},null,-1),G={href:"https://github.com/codemirror/theme-one-dark",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"oneDark",-1),I=n("tr",null,[n("td",null,"readonly"),n("td",null,"boolean"),n("td",null,"使光标可见，或者您可以拖动文本但不能编辑值。")],-1),W=n("tr",null,[n("td",null,"disabled"),n("td",null,"boolean"),n("td",null,[s("这是 CodeMirror 可编辑的相反值。类似于 "),n("code",null,"readonly"),s("，但将此值设为 true 将禁用拖动。")])],-1),z=n("td",null,"lang",-1),R=n("td",null,"LanguageSupport",-1),U={href:"https://codemirror.net/6/#languages",target:"_blank",rel:"noopener noreferrer"},A=n("td",null,"phrases",-1),F=n("td",null,"Record<string, string>",-1),J={href:"https://codemirror.net/6/examples/translate/",target:"_blank",rel:"noopener noreferrer"},K=n("tr",null,[n("td",null,"extensions"),n("td",null,"Extension[]"),n("td",null,"包括扩展 CodeMirror 的增强功能。")],-1),Q=n("tr",null,[n("td",null,"linter"),n("td",null,"LintSource"),n("td",null,[s("设置 Linter。输入 linter（例如 "),n("code",null,"@codemirror/lang-javascript"),s(" 的 "),n("code",null,"esLint([arbitrary rule])"),s(" 函数，"),n("code",null,"@codemirror/json"),s(" 的 "),n("code",null,"jsonParseLinter()"),s(" 函数） 。请参阅各种语言库的源以获取更多信息。")])],-1),X=n("td",null,"linterConfig",-1),Y=n("td",null,"Object",-1),Z={href:"https://codemirror.net/docs/ref/#lint.linter%5Econfig",target:"_blank",rel:"noopener noreferrer"},$=n("tr",null,[n("td",null,"gutter"),n("td",null,"boolean"),n("td",null,[s("当指定了 "),n("code",null,"linter"),s(" 时，在发生错误的行上显示 🔴。如果未指定 "),n("code",null,"linter"),s("，则不起作用。")])],-1),nn=n("td",null,"gutterConfig",-1),sn=n("td",null,"Object",-1),tn={href:"https://codemirror.net/docs/ref/#lint.lintGutter%5Econfig",target:"_blank",rel:"noopener noreferrer"},an=n("tr",null,[n("td",null,"tag"),n("td",null,"string"),n("td",null,[s("组件中使用的 HTML 标记。（默认为 "),n("code",null,"div"),s(" 标记。）")])],-1),en=n("p",null,[s("⚠ 注意："),n("code",null,"lang"),s(" 和 "),n("code",null,"linter"),s(" 也可以一起在 "),n("code",null,"extensions"),s(" 中设置。这些是为了兼容以前的 CodeMirror 设置版本和为了对属性进行类型标注而分开的。")],-1);function on(ln,rn){const t=o("ExternalLinkIcon");return l(),r("div",null,[i,u,n("div",d,[k,n("p",null,[s("使用 "),n("a",_,[s("vue-codemirror6"),a(t)])])]),h,n("table",null,[m,n("tbody",null,[v,n("tr",null,[g,b,n("td",null,[s("使用 "),n("a",f,[s("basicSetup"),a(t)]),s("。")])]),n("tr",null,[q,y,n("td",null,[s("使用 "),n("a",w,[s("miniSetup"),a(t)]),s("。如果还指定了 "),x,s(" 属性，则该设置将优先。")])]),C,S,n("tr",null,[j,E,n("td",null,[s("行文本换行。参见 "),n("a",L,[s("lineWrapping"),a(t)]),s("。")])]),M,n("tr",null,[V,N,n("td",null,[s("允许多重选择。参见 "),n("a",T,[s("allowMultipleSelections"),a(t)]),s("。")])]),B,O,n("tr",null,[P,D,n("td",null,[s("指定主题。例如，如果您使用 "),n("a",G,[s("@codemirror/theme-one-dark"),a(t)]),s("，请导入 "),H,s(" 并将其放在此属性中。")])]),I,W,n("tr",null,[z,R,n("td",null,[s("您希望进行语法高亮的语言。参见 "),n("a",U,[s("https://codemirror.net/6/#languages"),a(t)])])]),n("tr",null,[A,F,n("td",null,[s("如果要使显示的字符字符串多语言化，请在此处指定。参见 "),n("a",J,[s("https://codemirror.net/6/examples/translate/"),a(t)])])]),K,Q,n("tr",null,[X,Y,n("td",null,[s("参见 "),n("a",Z,[s("https://codemirror.net/docs/ref/#lint.linter^config"),a(t)]),s("。")])]),$,n("tr",null,[nn,sn,n("td",null,[s("参见 "),n("a",tn,[s("https://codemirror.net/docs/ref/#lint.lintGutter^config"),a(t)]),s("。")])]),an])]),en])}const un=e(c,[["render",on],["__file","code-editor.html.vue"]]);export{un as default};
