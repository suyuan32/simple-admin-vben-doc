import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as i,o as c,c as r,a as e,d as n,b as s,w as d,e as t}from"./app-908acf4f.js";const p={},u=t('<h1 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><p>This article will guide you through setting up a project from scratch.</p><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><div class="hint-container tip"><p class="hint-container-title">About Components</p><p>Although the project includes some wrapped components, they may not meet all of your requirements. Therefore, if the components do not meet your requirements, you can write your own code and don&#39;t need to use or keep the project&#39;s built-in components.</p></div><h2 id="environment-setup" tabindex="-1"><a class="header-anchor" href="#environment-setup" aria-hidden="true">#</a> Environment Setup</h2>',5),m={href:"https://pnpm.io/",target:"_blank",rel:"noopener noreferrer"},h={href:"http://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"},g={class:"hint-container warning"},b=e("p",{class:"hint-container-title"},"Note",-1),k={href:"https://pnpm.io/",target:"_blank",rel:"noopener noreferrer"},f={href:"http://nodejs.org/",target:"_blank",rel:"noopener noreferrer"},q=e("code",null,"18.x",-1),_=e("h2",{id:"tool-configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#tool-configuration","aria-hidden":"true"},"#"),n(" Tool Configuration")],-1),y={href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"},w={href:"https://marketplace.visualstudio.com/items?itemName=antfu.iconify",target:"_blank",rel:"noopener noreferrer"},x={href:"https://marketplace.visualstudio.com/items?itemName=voorjaar.windicss-intellisense",target:"_blank",rel:"noopener noreferrer"},j={href:"https://marketplace.visualstudio.com/items?itemName=Lokalise.i18n-ally",target:"_blank",rel:"noopener noreferrer"},I={href:"https://marketplace.visualstudio.com/items?itemName=Vue.vscode-typescript-vue-plugin",target:"_blank",rel:"noopener noreferrer"},N={href:"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint",target:"_blank",rel:"noopener noreferrer"},C={href:"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode",target:"_blank",rel:"noopener noreferrer"},E={href:"https://marketplace.visualstudio.com/items?itemName=stylelint.vscode-stylelint",target:"_blank",rel:"noopener noreferrer"},S={href:"https://marketplace.visualstudio.com/items?itemName=mikestead.dotenv",target:"_blank",rel:"noopener noreferrer"},G=t(`<h2 id="getting-the-code" tabindex="-1"><a class="header-anchor" href="#getting-the-code" aria-hidden="true">#</a> Getting the Code</h2><div class="hint-container warning"><p class="hint-container-title">Note</p><p>Make sure that the directory where you store the code and all of its parent directories do not contain Chinese, Korean, Japanese, or spaces, otherwise errors may occur after installing dependencies and starting the project.</p></div><h3 id="getting-the-code-from-github" tabindex="-1"><a class="header-anchor" href="#getting-the-code-from-github" aria-hidden="true">#</a> Getting the Code from GitHub</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># clone the code</span>
<span class="token function">git</span> clone https://github.com/suyuan32/simple-admin-backend-ui.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="getting-the-code-from-gitee" tabindex="-1"><a class="header-anchor" href="#getting-the-code-from-gitee" aria-hidden="true">#</a> Getting the Code from Gitee</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://gitee.com/hopefire/simple-admin-backend-ui.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><h3 id="installing-node-js" tabindex="-1"><a class="header-anchor" href="#installing-node-js" aria-hidden="true">#</a> Installing Node.js</h3>`,8),D={href:"https://nodejs.org/en/",target:"_blank",rel:"noopener noreferrer"},L=t(`<p><strong>Verification</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># should output the corresponding npm version</span>
<span class="token function">npm</span> <span class="token parameter variable">-v</span>
<span class="token comment"># should output the corresponding node version</span>
<span class="token function">node</span> <span class="token parameter variable">-v</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),V={href:"https://github.com/nvm-sh/nvm",target:"_blank",rel:"noopener noreferrer"},P=e("h3",{id:"installing-dependencies",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installing-dependencies","aria-hidden":"true"},"#"),n(" Installing Dependencies")],-1),T=e("h4",{id:"installing-pnpm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installing-pnpm","aria-hidden":"true"},"#"),n(" Installing pnpm")],-1),R={href:"https://pnpm.io/",target:"_blank",rel:"noopener noreferrer"},H=t(`<p>If <code>pnpm</code> is not installed, you can globally install it using the following command:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># globally install pnpm</span>
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> <span class="token function">pnpm</span>
<span class="token comment"># verify</span>
<span class="token function">pnpm</span> <span class="token parameter variable">-v</span> <span class="token comment"># should output the corresponding version number indicating successful installation</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="dependency-installation-command" tabindex="-1"><a class="header-anchor" href="#dependency-installation-command" aria-hidden="true">#</a> Dependency Installation Command</h4><p>In the project&#39;s root directory, open a command prompt and execute the following command. Wait patiently for the installation to complete.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># install dependencies</span>
<span class="token function">pnpm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="troubleshooting-imagemin-dependency-installation-failure" tabindex="-1"><a class="header-anchor" href="#troubleshooting-imagemin-dependency-installation-failure" aria-hidden="true">#</a> Troubleshooting imagemin Dependency Installation Failure</h3><p>Since imagemin is difficult to install in China, here are several solutions:</p><ol><li>Use <code>npm</code> and add the following configuration to your computer&#39;s <code>host</code> file:</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">199.232</span>.4.133 raw.githubusercontent.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Husky Installation Failure During Dependency Installation</p><p>Please check if your source code is downloaded directly from GitHub. Direct downloads do not have a <code>.git</code> folder, and <code>husky</code> requires <code>git</code> dependencies to be installed. In this case, you need to use <code>git init</code> to initialize the project and try to reinstall it.</p></div><h2 id="npm-script" tabindex="-1"><a class="header-anchor" href="#npm-script" aria-hidden="true">#</a> npm script</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot;scripts&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
  <span class="token comment"># install dependencies</span>
  <span class="token string">&quot;bootstrap&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;pnpm install&quot;</span>,
  <span class="token comment"># run the project</span>
  <span class="token string">&quot;serve&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;npm run dev&quot;</span>,
  <span class="token comment"># run the project</span>
  <span class="token string">&quot;dev&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vite&quot;</span>,
  <span class="token comment"># build the project</span>
  <span class="token string">&quot;build&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vite build &amp;&amp; esno ./build/script/postBuild.ts&quot;</span>,
  <span class="token comment"># build the project after clearing the cache</span>
  <span class="token string">&quot;build:no-cache&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;pnpm clean:cache &amp;&amp; npm run build&quot;</span>,
  <span class="token comment"># generate a bundle analysis. On Mac OS computers, the interface will automatically open after execution. On Windows computers, you need to open \`./build/.cache/stats.html\` to view it.</span>
  <span class="token string">&quot;report&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;cross-env REPORT=true npm run build&quot;</span>,
  <span class="token comment"># type checking</span>
  <span class="token string">&quot;type:check&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vue-tsc --noEmit --skipLibCheck&quot;</span>,
  <span class="token comment"># preview the packaged content (packaging must be done first)</span>
  <span class="token string">&quot;preview&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;npm run build &amp;&amp; vite preview&quot;</span>,
  <span class="token comment"># preview the local dist file directory directly</span>
  <span class="token string">&quot;preview:dist&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;vite preview&quot;</span>,
  <span class="token comment"># generate ChangeLog</span>
  <span class="token string">&quot;log&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;conventional-changelog -p angular -i CHANGELOG.md -s&quot;</span>,
  <span class="token comment"># delete cache</span>
  <span class="token string">&quot;clean:cache&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;rimraf node_modules/.cache/ &amp;&amp; rimraf node_modules/.vite&quot;</span>,
  <span class="token comment"># delete node_modules (manual deletion of this directory is slow on Windows systems, so you can use this command to delete it)</span>
  <span class="token string">&quot;clean:lib&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;rimraf node_modules&quot;</span>,
  <span class="token comment"># execute eslint validation and fix some problems</span>
  <span class="token string">&quot;lint:eslint&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;eslint <span class="token entity" title="\\&quot;">\\&quot;</span>{src,mock}/**/*.{vue,ts,tsx}<span class="token entity" title="\\&quot;">\\&quot;</span> --fix&quot;</span>,
  <span class="token comment"># execute prettier formatting (this command will format all the code in the project with prettier, please use it with caution)</span>
  <span class="token string">&quot;lint:prettier&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;prettier --write --loglevel warn <span class="token entity" title="\\&quot;">\\&quot;</span>src/**/*.{js,json,tsx,css,less,scss,vue,html,md}<span class="token entity" title="\\&quot;">\\&quot;</span>&quot;</span>,
  <span class="token comment"># execute stylelint formatting</span>
  <span class="token string">&quot;lint:stylelint&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;stylelint --fix <span class="token entity" title="\\&quot;">\\&quot;</span>**/*.{vue,less,postcss,css,scss}<span class="token entity" title="\\&quot;">\\&quot;</span> --cache --cache-location node_modules/.cache/stylelint/&quot;</span>,
  <span class="token string">&quot;lint:lint-staged&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;lint-staged -c ./.husky/lintstagedrc.js&quot;</span>,
  <span class="token string">&quot;lint:pretty&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;pretty-quick --staged&quot;</span>,
  <span class="token comment"># test gzip compression on the packaged result</span>
  <span class="token string">&quot;test:gzip&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http-server dist --cors --gzip -c-1&quot;</span>,
  <span class="token comment"># test brotli compression on the packaged directory</span>
  <span class="token string">&quot;test:br&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;http-server dist --cors --brotli -c-1&quot;</span>,
  <span class="token comment"># reinstall dependencies, see instructions below</span>
  <span class="token string">&quot;reinstall&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;rimraf pnpm.lock &amp;&amp; rimraf package.lock.json &amp;&amp; rimraf node_modules &amp;&amp; npm run bootstrap&quot;</span>,
  <span class="token string">&quot;install:husky&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;is-ci || husky install&quot;</span>,
  <span class="token comment"># generate icon set, see instructions below</span>
  <span class="token string">&quot;gen:icon&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;esno ./build/generate/icon/index.ts&quot;</span>,
  <span class="token string">&quot;postinstall&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;npm run install:husky&quot;</span>
<span class="token punctuation">}</span>,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="generating-an-icon-set" tabindex="-1"><a class="header-anchor" href="#generating-an-icon-set" aria-hidden="true">#</a> Generating an Icon Set</h3>`,13),z=t(`<h3 id="reinstalling-dependencies" tabindex="-1"><a class="header-anchor" href="#reinstalling-dependencies" aria-hidden="true">#</a> Reinstalling Dependencies</h3><p>This command will first delete <code>node_modules</code>, <code>pnpm.lock</code>, and <code>package.lock.json</code> before reinstalling dependencies (the installation speed will be significantly slower).</p><p>You can now modify the code for business development. We have built-in mock data, HMR real-time preview, state management, internationalization, global routing, and many other useful features to assist development. Please read other sections for more information.</p><h2 id="directory-description" tabindex="-1"><a class="header-anchor" href="#directory-description" aria-hidden="true">#</a> Directory description</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>├── apps
├── deploy
├── internal              <span class="token comment"># Internal configuration folder</span>
│   ├── eslint-config     <span class="token comment"># Eslint configuration</span>
│   ├── stylelint-config  <span class="token comment"># Stylelint configuration</span>
│   ├── ts-config         <span class="token comment"># Typescript configuration</span>
│   └── vite-config       <span class="token comment"># Vite configuration</span>
├── mock                  <span class="token comment"># Mock folder</span>
│   └── sys
├── packages
│   ├── hooks
│   │   └── src
│   └── types
│       └── src
├── public                <span class="token comment"># Publicly downloadable folder</span>
│   └── resource
│       ├── img
│       └── tinymce
├── src
│   ├── api              <span class="token comment"># API interface definition folder</span>
│   ├── assets           <span class="token comment"># Internal resource folder</span>
│   ├── components       <span class="token comment"># Components</span>
│   ├── design           <span class="token comment"># Design resource files</span>
│   ├── directives       <span class="token comment"># Directives</span>
│   ├── enums            <span class="token comment"># Enumerations</span>
│   ├── hooks            <span class="token comment"># Hooks</span>
│   ├── layouts          <span class="token comment"># Layout files</span>
│   ├── locales          <span class="token comment"># Multilingual support</span>
│   ├── logics           <span class="token comment"># Logic</span>
│   ├── router           <span class="token comment"># Router</span>
│   ├── settings         <span class="token comment"># Project settings</span>
│   ├── store            <span class="token comment"># Store storage</span>
│   ├── utils            <span class="token comment"># Utility classes</span>
│   └── views            <span class="token comment"># Pages</span>
└── types
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5);function A(M,O){const a=i("ExternalLinkIcon"),o=i("RouterLink");return c(),r("div",null,[u,e("p",null,[n("You need to install "),e("a",m,[n("pnpm"),s(a)]),n(", "),e("a",h,[n("Node.js"),s(a)]),n(", and "),e("a",v,[n("Git"),s(a)]),n(" on your local environment.")]),e("div",g,[b,e("ul",null,[e("li",null,[n("It is recommended to use "),e("a",k,[n("pnpm"),s(a)]),n(", otherwise the dependencies may not be installed.")]),e("li",null,[e("a",f,[n("Node.js"),s(a)]),n(" version should be "),q,n(" or higher")])])]),_,e("p",null,[n("If you are using "),e("a",y,[n("VS Code"),s(a)]),n(" (recommended), you can install the following extensions to improve development efficiency and code formatting:")]),e("ul",null,[e("li",null,[e("a",w,[n("Iconify IntelliSense"),s(a)]),n(" - Iconify icon plugin")]),e("li",null,[e("a",x,[n("windicss IntelliSense"),s(a)]),n(" - windicss suggestion plugin")]),e("li",null,[e("a",j,[n("I18n-ally"),s(a)]),n(" - i18n plugin")]),e("li",null,[e("a",I,[n("Volar"),s(a)]),n(" - vue3 support")]),e("li",null,[e("a",N,[n("ESLint"),s(a)]),n(" - script code check")]),e("li",null,[e("a",C,[n("Prettier"),s(a)]),n(" - code formatting")]),e("li",null,[e("a",E,[n("Stylelint"),s(a)]),n(" - css formatting")]),e("li",null,[e("a",S,[n("DotENV"),s(a)]),n(" - .env file highlighting")])]),G,e("p",null,[n("If you haven't installed "),e("a",D,[n("Node.js"),s(a)]),n(" on your computer, please install it.")]),L,e("p",null,[n("If you need to have multiple versions of Node.js installed at the same time, you can use "),e("a",V,[n("Nvm"),s(a)]),n(" or other tools to manage Node.js versions.")]),P,T,e("p",null,[n("You must use "),e("a",R,[n("pnpm"),s(a)]),n(" for dependency installation (if other package managers cannot install dependencies, you need to handle it yourself).")]),H,e("p",null,[n("This command generates the selected icon set, which is provided to the icon selector. Please refer to "),s(o,{to:"/guide/tutorial/dep/icon.html#%E9%A2%84%E7%94%9F%E6%88%90"},{default:d(()=>[n("Icon Set Generation")]),_:1}),n(" for specific usage.")]),z])}const F=l(p,[["render",A],["__file","1-index.html.vue"]]);export{F as default};
